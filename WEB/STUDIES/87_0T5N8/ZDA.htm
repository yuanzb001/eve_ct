<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">

<head>

<title>

Merge Ambassador

</title>

<script type="text/javascript">
<!-- This comment hides JavaScript from non-javascript browsers
var BTN_HOVER_COLOR = "#ffff80";
var BTN_HIGHTLIGHT_COLOR = "#c0ffc0";
var BACKGROUND_COLOR = "SILVER";
var MONTAGE_EXT = "d1";
var gExamID = "87_0T5N8";
var gReportID = true;
var gVoiceClipID = "87_0T5N8";
var gTools = 
[ ["twl", "twl", "twla"],
  ["tmag",
  ["tmag", "Point and Drag to Magnify", "Drag"],
  ["tmag2", "Select Area to Magnify", "Select"],
  ["tmaga", "Point and Drag to Magnify for Whole Series", "Drag(all)"],
  ["tmag2a", "Select Area to Magnify for Whole Series", "Select(all)"] ] ];
var gWLUnassigned = -100000;
var gScrollbarWidth = 0;
var gReady = true;
var gCanvas = new Array();
var gImgProps = new Array();
var gMontage;
var gToolId = "";
var gSquareMode = "";
var gActiveDiv = "";
var gLoop = false;
var montageId = "Mntge";
var gCanvasId = "";
var gLeftButtonDown = false;
var gPending = false;
var gStartPos = new Point(0, 0);
var gEndPos = new Point(0, 0);
var gLastPos = new Point(0, 0);
var gGrid = new Point(0, 0);
var normalQual = 80;
var gQuality = normalQual;
var gShrink = true;
var gExpand = true;
var winWidth = 0;
var winHeight = 0;
var gIconLabel = false;
var gIconWidth = 22;
var gIconHeight = 22;
var gToolbarHeight;
var saveGridSize = new Point(0, 0);
var bIsOneUp = false;
function $(id) { return document.getElementById(id); }
var gSeries = new Array();
var gImgSeries = new Array();
var gDocSeries = new Array();
var gShownSeries = gImgSeries;
var gImgList = new Array();
var gDocList = new Array();
var gShownList = gImgList;
var gImgPopup;
var gTotlImgCache = 0;
var gImgCachCur = 0;
var gImgCached = new Array();
gImgSeries.grid = new Point(0, 0);
gDocSeries.grid = new Point(0, 0);
gImgSeries.first = gDocSeries.first = gImgList.first = gDocList.first = 0;
function addSeries(title, first, last, type)
{
var     n = gSeries.length;
    gSeries[n] = new Object();
    gSeries[n].id = "ser_" + n;
    gSeries[n].title = title + " [" + first + "-" + last + "]";
    gSeries[n].firstIndex = first;
    gSeries[n].lastIndex = last;
    gSeries[n].shownIndex = first;
    gSeries[n].preload = false;
    gSeries[n].type = type;
    var isDoc = (type == "CONF" || type == "DOC");
    if (isDoc)
    {
        gDocsPresent = true;
        gDocSeries[gDocSeries.length] = n;
    }
    else
    {
        gImgSeries[gImgSeries.length] = n;
    }
    for (var i = first; i <= last; i++)
    {
    initImageProp(i);
    if (isDoc)
        gDocList[gDocList.length] = i;
    else
        gImgList[gImgList.length] = i;
    }
}
function Point(x, y)                   { this.x = x; this.y = y; }
Point.prototype.copyPt = function(pt)  { this.x = pt.x; this.y = pt.y; }
Point.prototype.add = function(dx, dy) { this.x += dx; this.y += dy; }
Point.prototype.addPt = function(pt)   { this.x += pt.x; this.y += pt.y; }
Point.prototype.equal = function(pt)   { return (this.x == pt.x && this.y == pt.y); }
Point.prototype.isZero = function()    { return (this.x == 0 && this.y == 0); }
Point.prototype.toString = function()  { return this.x + "," + this.y; }
function WL()
{
  this.w = (arguments.length > 0) ? arguments[0] : gWLUnassigned;
  this.l = (arguments.length > 1) ? arguments[1] : gWLUnassigned;
}
WL.prototype.setWL = function(w,l)     { this.w = w; this.l = l; }
WL.prototype.copy = function(wl)       { this.w = wl.w; this.l = wl.l; }
WL.prototype.isValid = function()      { return (this.w != gWLUnassigned && this.l != gWLUnassigned); }
WL.prototype.toString = function()     { return this.w + "," + this.l; }

Menu.LastIndex = 0;

function Menu()
{
  this.id = "mnu_" + Menu.LastIndex++;
  this.backgroundColor = "#f0f0f0";
  this.highlightColor = "#a0a0a0";
  this.simple = false;
  this.items = new Array();
  for (var i = 0; i < arguments.length; i++)
  {
    this.addItem(arguments[i][0], arguments[i][1]);
  }
}

Menu.prototype.addItem = function(text, action)
{
  var n = this.items.length;
  this.items[n] = new Object();
  this.items[n].text = text;
  this.items[n].action = action;
}

Menu.prototype.popUp = function(x, y)
{
  var n = 0;
  var s = new Array();
  s[n++] = "<table style='border-collapse:collapse;' cellpadding='3' cellspacing='0'><tr><td>";
  s[n++] = "<table style='border-collapse:collapse;' cellpadding='1' cellspacing='0'>";
  for (var i = 0; i < this.items.length; i++)
  {
    if (this.items[i].text == "-")
    {
      s[n++] = "<tr><td style='background-color:" + this.backgroundColor + "'";
      if (!this.simple) s[n++] = " colspan='3'";
      s[n++] = "><hr/></td></tr>";
    }
    else
    {
      s[n++] = "<tr style='background-color:" + this.backgroundColor + "' ";
      if (this.items[i].action.length > 0)
      {
        s[n++] = "onmouseover=\"this.style.backgroundColor='" + this.highlightColor + "';\" ";
        s[n++] = "onmouseout=\"this.style.backgroundColor='" + this.backgroundColor + "';\" ";
        s[n++] = "onclick=\"Popup.closeAll();" + this.items[i].action + "\"";
      }
      s[n++] = ">";
      if (!this.simple) s[n++] = "<td style='width:20px;'></td>";
      s[n++] = "<td onclick=\"Popup.closeAll();" + this.items[i].action + "\">";
      s[n++] = this.items[i].text;
      s[n++] = "</td>";
      if (!this.simple) s[n++] = "<td style='width:20px;'></td>";
      s[n++] = "</tr>";
    }
  }
  s[n++] = "</table></td></tr></table>";
  this.container = new Popup(x, y);
  this.container.div.innerHTML = s.join("");
}

var isIE      = navigator.appName.indexOf("Microsoft") >= 0;;
var isPPC     = (navigator.appName == "Microsoft Pocket Internet Explorer");;
var isWM      = (navigator.appName == "Microsoft IE Mobile");;
var isMobile  = (isPPC || isWM);;

function getPageCoords (el) 
{
  var coords = {x: 0, y: 0};
  do 
  {
    coords.x += el.offsetLeft;
    coords.y += el.offsetTop;
  }
  while ((el = el.offsetParent));
  return coords;
}

Popup.LastPopup = new Array();
Popup.closeAll = function()
{
  if (Popup.LastPopup.length > 0)
    Popup.LastPopup[0].close();
}

function Popup(x, y, w, h)
{
  this.div = document.createElement("div");
  this.div.style.left = x + "px";
  this.div.style.top = y + "px";
  if (arguments.length > 2)
    this.div.style.width = w + "px";
  if (arguments.length > 3)
    this.div.style.height = h + "px";
  this.div.style.border = "1px solid #7f7f7f";
  this.div.style.position = "absolute";
  this.div.style.backgroundColor = "#f0fff0";
  this.div.style.overflow = "hidden";
  document.body.appendChild(this.div);
  this.div.popup = this;

  if (Popup.LastPopup.length == 0)
  {
    if (isIE)
    {
      this.lastOnMouseDown = document.onmousedown;
      document.onmousedown = this.onMouseDown;
    }
    else
    {
      this.lastOnMouseDown = window.onmousedown;
      //window.captureEvents(Event.MOUSEDOWN);
      window.onmousedown = this.onMouseDown;
    }
  }
  Popup.LastPopup[Popup.LastPopup.length] = this;
}
Popup.prototype.close = function()
{
  for (var i = Popup.LastPopup.length - 1; i >= 0; i--)
  {
    var obj = Popup.LastPopup[i].div;
    obj.parentNode.removeChild(obj);
    this.div = null;
    if (this == Popup.LastPopup[i])
    {
      Popup.LastPopup.splice(i, Popup.LastPopup.length - i)
      break;
    }
  }
  if (Popup.LastPopup.length == 0)
  {
    if (isIE)
    {
      if (this.lastOnMouseDown)
        document.onmousedown = this.lastOnMouseDown;
    }
    else
    {
      if (this.lastOnMouseDown)
        window.onmousedown = this.lastOnMouseDown;
    }
  }
}
Popup.prototype.onMouseDown = function(evt)
{
  evt = evt || window.event;
  var i;
  for (i = Popup.LastPopup.length - 1; i >= 0; i--)
  {
    var obj = Popup.LastPopup[i].div;
    var coords = getPageCoords(obj);
    var root = document.documentElement || document.body;
    var x = coords.x;
    var y = coords.y;
    var mx = evt.pageX || evt.clientX + root.scrollLeft;
    var my = evt.pageY || evt.clientY + root.scrollTop;
    if (mx >= x && my >= y && mx <= (x + obj.offsetWidth) && my <= (y + obj.offsetHeight))
      break;
  }
  if (i < 0)
    Popup.closeAll();
}

var gMontagePresent = false;
var gSoundPresent = false;
var gHasNotes = false;
var gDocsPresent = false;
var ViewOpenDocuments = 1;
var ViewConfidentialDocuments = 1;

addSeries('SCOUT', 1, 2, 'IMAGE');
addSeries('Dose Report', 3, 3, 'IMAGE');
addSeries('AX BONE #2', 4, 158, 'IMAGE');
addSeries('AX SOFT #2', 159, 313, 'IMAGE');
addSeries('COR BONE', 314, 487, 'IMAGE');
addSeries('SAG BONE', 488, 657, 'IMAGE');
initImageVirtual(1, '1', 'W=500 L=50 V=1 ');
initImageVirtual(2, '2', 'W=500 L=50 V=1 ');
initImageVirtual(3, '3', 'W=1 L=-2 V=1 ');
initImageVirtual(4, '4', 'W=3460 L=630 V=1 ');
initImageVirtual(5, '5', 'W=3460 L=630 V=1 ');
initImageVirtual(6, '6', 'W=3460 L=630 V=1 ');
initImageVirtual(7, '7', 'W=3460 L=630 V=1 ');
initImageVirtual(8, '8', 'W=3460 L=630 V=1 ');
initImageVirtual(9, '9', 'W=3460 L=630 V=1 ');
initImageVirtual(10, '10', 'W=3460 L=630 V=1 ');
initImageVirtual(11, '11', 'W=3460 L=630 V=1 ');
initImageVirtual(12, '12', 'W=3460 L=630 V=1 ');
initImageVirtual(13, '13', 'W=3460 L=630 V=1 ');
initImageVirtual(14, '14', 'W=3460 L=630 V=1 ');
initImageVirtual(15, '15', 'W=3460 L=630 V=1 ');
initImageVirtual(16, '16', 'W=3460 L=630 V=1 ');
initImageVirtual(17, '17', 'W=3460 L=630 V=1 ');
initImageVirtual(18, '18', 'W=3460 L=630 V=1 ');
initImageVirtual(19, '19', 'W=3460 L=630 V=1 ');
initImageVirtual(20, '20', 'W=3460 L=630 V=1 ');
initImageVirtual(21, '21', 'W=3460 L=630 V=1 ');
initImageVirtual(22, '22', 'W=3460 L=630 V=1 ');
initImageVirtual(23, '23', 'W=3460 L=630 V=1 ');
initImageVirtual(24, '24', 'W=3460 L=630 V=1 ');
initImageVirtual(25, '25', 'W=3460 L=630 V=1 ');
initImageVirtual(26, '26', 'W=3460 L=630 V=1 ');
initImageVirtual(27, '27', 'W=3460 L=630 V=1 ');
initImageVirtual(28, '28', 'W=3460 L=630 V=1 ');
initImageVirtual(29, '29', 'W=3460 L=630 V=1 ');
initImageVirtual(30, '30', 'W=3460 L=630 V=1 ');
initImageVirtual(31, '31', 'W=3460 L=630 V=1 ');
initImageVirtual(32, '32', 'W=3460 L=630 V=1 ');
initImageVirtual(33, '33', 'W=3460 L=630 V=1 ');
initImageVirtual(34, '34', 'W=3460 L=630 V=1 ');
initImageVirtual(35, '35', 'W=3460 L=630 V=1 ');
initImageVirtual(36, '36', 'W=3460 L=630 V=1 ');
initImageVirtual(37, '37', 'W=3460 L=630 V=1 ');
initImageVirtual(38, '38', 'W=3460 L=630 V=1 ');
initImageVirtual(39, '39', 'W=3460 L=630 V=1 ');
initImageVirtual(40, '40', 'W=3460 L=630 V=1 ');
initImageVirtual(41, '41', 'W=3460 L=630 V=1 ');
initImageVirtual(42, '42', 'W=3460 L=630 V=1 ');
initImageVirtual(43, '43', 'W=3460 L=630 V=1 ');
initImageVirtual(44, '44', 'W=3460 L=630 V=1 ');
initImageVirtual(45, '45', 'W=3460 L=630 V=1 ');
initImageVirtual(46, '46', 'W=3460 L=630 V=1 ');
initImageVirtual(47, '47', 'W=3460 L=630 V=1 ');
initImageVirtual(48, '48', 'W=3460 L=630 V=1 ');
initImageVirtual(49, '49', 'W=3460 L=630 V=1 ');
initImageVirtual(50, '50', 'W=3460 L=630 V=1 ');
initImageVirtual(51, '51', 'W=3460 L=630 V=1 ');
initImageVirtual(52, '52', 'W=3460 L=630 V=1 ');
initImageVirtual(53, '53', 'W=3460 L=630 V=1 ');
initImageVirtual(54, '54', 'W=3460 L=630 V=1 ');
initImageVirtual(55, '55', 'W=3460 L=630 V=1 ');
initImageVirtual(56, '56', 'W=3460 L=630 V=1 ');
initImageVirtual(57, '57', 'W=3460 L=630 V=1 ');
initImageVirtual(58, '58', 'W=3460 L=630 V=1 ');
initImageVirtual(59, '59', 'W=3460 L=630 V=1 ');
initImageVirtual(60, '60', 'W=3460 L=630 V=1 ');
initImageVirtual(61, '61', 'W=3460 L=630 V=1 ');
initImageVirtual(62, '62', 'W=3460 L=630 V=1 ');
initImageVirtual(63, '63', 'W=3460 L=630 V=1 ');
initImageVirtual(64, '64', 'W=3460 L=630 V=1 ');
initImageVirtual(65, '65', 'W=3460 L=630 V=1 ');
initImageVirtual(66, '66', 'W=3460 L=630 V=1 ');
initImageVirtual(67, '67', 'W=3460 L=630 V=1 ');
initImageVirtual(68, '68', 'W=3460 L=630 V=1 ');
initImageVirtual(69, '69', 'W=3460 L=630 V=1 ');
initImageVirtual(70, '70', 'W=3460 L=630 V=1 ');
initImageVirtual(71, '71', 'W=3460 L=630 V=1 ');
initImageVirtual(72, '72', 'W=3460 L=630 V=1 ');
initImageVirtual(73, '73', 'W=3460 L=630 V=1 ');
initImageVirtual(74, '74', 'W=3460 L=630 V=1 ');
initImageVirtual(75, '75', 'W=3460 L=630 V=1 ');
initImageVirtual(76, '76', 'W=3460 L=630 V=1 ');
initImageVirtual(77, '77', 'W=3460 L=630 V=1 ');
initImageVirtual(78, '78', 'W=3460 L=630 V=1 ');
initImageVirtual(79, '79', 'W=3460 L=630 V=1 ');
initImageVirtual(80, '80', 'W=3460 L=630 V=1 ');
initImageVirtual(81, '81', 'W=3460 L=630 V=1 ');
initImageVirtual(82, '82', 'W=3460 L=630 V=1 ');
initImageVirtual(83, '83', 'W=3460 L=630 V=1 ');
initImageVirtual(84, '84', 'W=3460 L=630 V=1 ');
initImageVirtual(85, '85', 'W=3460 L=630 V=1 ');
initImageVirtual(86, '86', 'W=3460 L=630 V=1 ');
initImageVirtual(87, '87', 'W=3460 L=630 V=1 ');
initImageVirtual(88, '88', 'W=3460 L=630 V=1 ');
initImageVirtual(89, '89', 'W=3460 L=630 V=1 ');
initImageVirtual(90, '90', 'W=3460 L=630 V=1 ');
initImageVirtual(91, '91', 'W=3460 L=630 V=1 ');
initImageVirtual(92, '92', 'W=3460 L=630 V=1 ');
initImageVirtual(93, '93', 'W=3460 L=630 V=1 ');
initImageVirtual(94, '94', 'W=3460 L=630 V=1 ');
initImageVirtual(95, '95', 'W=3460 L=630 V=1 ');
initImageVirtual(96, '96', 'W=3460 L=630 V=1 ');
initImageVirtual(97, '97', 'W=3460 L=630 V=1 ');
initImageVirtual(98, '98', 'W=3460 L=630 V=1 ');
initImageVirtual(99, '99', 'W=3460 L=630 V=1 ');
initImageVirtual(100, '100', 'W=3460 L=630 V=1 ');
initImageVirtual(101, '101', 'W=3460 L=630 V=1 ');
initImageVirtual(102, '102', 'W=3460 L=630 V=1 ');
initImageVirtual(103, '103', 'W=3460 L=630 V=1 ');
initImageVirtual(104, '104', 'W=3460 L=630 V=1 ');
initImageVirtual(105, '105', 'W=3460 L=630 V=1 ');
initImageVirtual(106, '106', 'W=3460 L=630 V=1 ');
initImageVirtual(107, '107', 'W=3460 L=630 V=1 ');
initImageVirtual(108, '108', 'W=3460 L=630 V=1 ');
initImageVirtual(109, '109', 'W=3460 L=630 V=1 ');
initImageVirtual(110, '110', 'W=3460 L=630 V=1 ');
initImageVirtual(111, '111', 'W=3460 L=630 V=1 ');
initImageVirtual(112, '112', 'W=3460 L=630 V=1 ');
initImageVirtual(113, '113', 'W=3460 L=630 V=1 ');
initImageVirtual(114, '114', 'W=3460 L=630 V=1 ');
initImageVirtual(115, '115', 'W=3460 L=630 V=1 ');
initImageVirtual(116, '116', 'W=3460 L=630 V=1 ');
initImageVirtual(117, '117', 'W=3460 L=630 V=1 ');
initImageVirtual(118, '118', 'W=3460 L=630 V=1 ');
initImageVirtual(119, '119', 'W=3460 L=630 V=1 ');
initImageVirtual(120, '120', 'W=3460 L=630 V=1 ');
initImageVirtual(121, '121', 'W=3460 L=630 V=1 ');
initImageVirtual(122, '122', 'W=3460 L=630 V=1 ');
initImageVirtual(123, '123', 'W=3460 L=630 V=1 ');
initImageVirtual(124, '124', 'W=3460 L=630 V=1 ');
initImageVirtual(125, '125', 'W=3460 L=630 V=1 ');
initImageVirtual(126, '126', 'W=3460 L=630 V=1 ');
initImageVirtual(127, '127', 'W=3460 L=630 V=1 ');
initImageVirtual(128, '128', 'W=3460 L=630 V=1 ');
initImageVirtual(129, '129', 'W=3460 L=630 V=1 ');
initImageVirtual(130, '130', 'W=3460 L=630 V=1 ');
initImageVirtual(131, '131', 'W=3460 L=630 V=1 ');
initImageVirtual(132, '132', 'W=3460 L=630 V=1 ');
initImageVirtual(133, '133', 'W=3460 L=630 V=1 ');
initImageVirtual(134, '134', 'W=3460 L=630 V=1 ');
initImageVirtual(135, '135', 'W=3460 L=630 V=1 ');
initImageVirtual(136, '136', 'W=3460 L=630 V=1 ');
initImageVirtual(137, '137', 'W=3460 L=630 V=1 ');
initImageVirtual(138, '138', 'W=3460 L=630 V=1 ');
initImageVirtual(139, '139', 'W=3460 L=630 V=1 ');
initImageVirtual(140, '140', 'W=3460 L=630 V=1 ');
initImageVirtual(141, '141', 'W=3460 L=630 V=1 ');
initImageVirtual(142, '142', 'W=3460 L=630 V=1 ');
initImageVirtual(143, '143', 'W=3460 L=630 V=1 ');
initImageVirtual(144, '144', 'W=3460 L=630 V=1 ');
initImageVirtual(145, '145', 'W=3460 L=630 V=1 ');
initImageVirtual(146, '146', 'W=3460 L=630 V=1 ');
initImageVirtual(147, '147', 'W=3460 L=630 V=1 ');
initImageVirtual(148, '148', 'W=3460 L=630 V=1 ');
initImageVirtual(149, '149', 'W=3460 L=630 V=1 ');
initImageVirtual(150, '150', 'W=3460 L=630 V=1 ');
initImageVirtual(151, '151', 'W=3460 L=630 V=1 ');
initImageVirtual(152, '152', 'W=3460 L=630 V=1 ');
initImageVirtual(153, '153', 'W=3460 L=630 V=1 ');
initImageVirtual(154, '154', 'W=3460 L=630 V=1 ');
initImageVirtual(155, '155', 'W=3460 L=630 V=1 ');
initImageVirtual(156, '156', 'W=3460 L=630 V=1 ');
initImageVirtual(157, '157', 'W=3460 L=630 V=1 ');
initImageVirtual(158, '158', 'W=3460 L=630 V=1 ');
initImageVirtual(159, '159', 'W=400 L=40 V=1 ');
initImageVirtual(160, '160', 'W=400 L=40 V=1 ');
initImageVirtual(161, '161', 'W=400 L=40 V=1 ');
initImageVirtual(162, '162', 'W=400 L=40 V=1 ');
initImageVirtual(163, '163', 'W=400 L=40 V=1 ');
initImageVirtual(164, '164', 'W=400 L=40 V=1 ');
initImageVirtual(165, '165', 'W=400 L=40 V=1 ');
initImageVirtual(166, '166', 'W=400 L=40 V=1 ');
initImageVirtual(167, '167', 'W=400 L=40 V=1 ');
initImageVirtual(168, '168', 'W=400 L=40 V=1 ');
initImageVirtual(169, '169', 'W=400 L=40 V=1 ');
initImageVirtual(170, '170', 'W=400 L=40 V=1 ');
initImageVirtual(171, '171', 'W=400 L=40 V=1 ');
initImageVirtual(172, '172', 'W=400 L=40 V=1 ');
initImageVirtual(173, '173', 'W=400 L=40 V=1 ');
initImageVirtual(174, '174', 'W=400 L=40 V=1 ');
initImageVirtual(175, '175', 'W=400 L=40 V=1 ');
initImageVirtual(176, '176', 'W=400 L=40 V=1 ');
initImageVirtual(177, '177', 'W=400 L=40 V=1 ');
initImageVirtual(178, '178', 'W=400 L=40 V=1 ');
initImageVirtual(179, '179', 'W=400 L=40 V=1 ');
initImageVirtual(180, '180', 'W=400 L=40 V=1 ');
initImageVirtual(181, '181', 'W=400 L=40 V=1 ');
initImageVirtual(182, '182', 'W=400 L=40 V=1 ');
initImageVirtual(183, '183', 'W=400 L=40 V=1 ');
initImageVirtual(184, '184', 'W=400 L=40 V=1 ');
initImageVirtual(185, '185', 'W=400 L=40 V=1 ');
initImageVirtual(186, '186', 'W=400 L=40 V=1 ');
initImageVirtual(187, '187', 'W=400 L=40 V=1 ');
initImageVirtual(188, '188', 'W=400 L=40 V=1 ');
initImageVirtual(189, '189', 'W=400 L=40 V=1 ');
initImageVirtual(190, '190', 'W=400 L=40 V=1 ');
initImageVirtual(191, '191', 'W=400 L=40 V=1 ');
initImageVirtual(192, '192', 'W=400 L=40 V=1 ');
initImageVirtual(193, '193', 'W=400 L=40 V=1 ');
initImageVirtual(194, '194', 'W=400 L=40 V=1 ');
initImageVirtual(195, '195', 'W=400 L=40 V=1 ');
initImageVirtual(196, '196', 'W=400 L=40 V=1 ');
initImageVirtual(197, '197', 'W=400 L=40 V=1 ');
initImageVirtual(198, '198', 'W=400 L=40 V=1 ');
initImageVirtual(199, '199', 'W=400 L=40 V=1 ');
initImageVirtual(200, '200', 'W=400 L=40 V=1 ');
initImageVirtual(201, '201', 'W=400 L=40 V=1 ');
initImageVirtual(202, '202', 'W=400 L=40 V=1 ');
initImageVirtual(203, '203', 'W=400 L=40 V=1 ');
initImageVirtual(204, '204', 'W=400 L=40 V=1 ');
initImageVirtual(205, '205', 'W=400 L=40 V=1 ');
initImageVirtual(206, '206', 'W=400 L=40 V=1 ');
initImageVirtual(207, '207', 'W=400 L=40 V=1 ');
initImageVirtual(208, '208', 'W=400 L=40 V=1 ');
initImageVirtual(209, '209', 'W=400 L=40 V=1 ');
initImageVirtual(210, '210', 'W=400 L=40 V=1 ');
initImageVirtual(211, '211', 'W=400 L=40 V=1 ');
initImageVirtual(212, '212', 'W=400 L=40 V=1 ');
initImageVirtual(213, '213', 'W=400 L=40 V=1 ');
initImageVirtual(214, '214', 'W=400 L=40 V=1 ');
initImageVirtual(215, '215', 'W=400 L=40 V=1 ');
initImageVirtual(216, '216', 'W=400 L=40 V=1 ');
initImageVirtual(217, '217', 'W=400 L=40 V=1 ');
initImageVirtual(218, '218', 'W=400 L=40 V=1 ');
initImageVirtual(219, '219', 'W=400 L=40 V=1 ');
initImageVirtual(220, '220', 'W=400 L=40 V=1 ');
initImageVirtual(221, '221', 'W=400 L=40 V=1 ');
initImageVirtual(222, '222', 'W=400 L=40 V=1 ');
initImageVirtual(223, '223', 'W=400 L=40 V=1 ');
initImageVirtual(224, '224', 'W=400 L=40 V=1 ');
initImageVirtual(225, '225', 'W=400 L=40 V=1 ');
initImageVirtual(226, '226', 'W=400 L=40 V=1 ');
initImageVirtual(227, '227', 'W=400 L=40 V=1 ');
initImageVirtual(228, '228', 'W=400 L=40 V=1 ');
initImageVirtual(229, '229', 'W=400 L=40 V=1 ');
initImageVirtual(230, '230', 'W=400 L=40 V=1 ');
initImageVirtual(231, '231', 'W=400 L=40 V=1 ');
initImageVirtual(232, '232', 'W=400 L=40 V=1 ');
initImageVirtual(233, '233', 'W=400 L=40 V=1 ');
initImageVirtual(234, '234', 'W=400 L=40 V=1 ');
initImageVirtual(235, '235', 'W=400 L=40 V=1 ');
initImageVirtual(236, '236', 'W=400 L=40 V=1 ');
initImageVirtual(237, '237', 'W=400 L=40 V=1 ');
initImageVirtual(238, '238', 'W=400 L=40 V=1 ');
initImageVirtual(239, '239', 'W=400 L=40 V=1 ');
initImageVirtual(240, '240', 'W=400 L=40 V=1 ');
initImageVirtual(241, '241', 'W=400 L=40 V=1 ');
initImageVirtual(242, '242', 'W=400 L=40 V=1 ');
initImageVirtual(243, '243', 'W=400 L=40 V=1 ');
initImageVirtual(244, '244', 'W=400 L=40 V=1 ');
initImageVirtual(245, '245', 'W=400 L=40 V=1 ');
initImageVirtual(246, '246', 'W=400 L=40 V=1 ');
initImageVirtual(247, '247', 'W=400 L=40 V=1 ');
initImageVirtual(248, '248', 'W=400 L=40 V=1 ');
initImageVirtual(249, '249', 'W=400 L=40 V=1 ');
initImageVirtual(250, '250', 'W=400 L=40 V=1 ');
initImageVirtual(251, '251', 'W=400 L=40 V=1 ');
initImageVirtual(252, '252', 'W=400 L=40 V=1 ');
initImageVirtual(253, '253', 'W=400 L=40 V=1 ');
initImageVirtual(254, '254', 'W=400 L=40 V=1 ');
initImageVirtual(255, '255', 'W=400 L=40 V=1 ');
initImageVirtual(256, '256', 'W=400 L=40 V=1 ');
initImageVirtual(257, '257', 'W=400 L=40 V=1 ');
initImageVirtual(258, '258', 'W=400 L=40 V=1 ');
initImageVirtual(259, '259', 'W=400 L=40 V=1 ');
initImageVirtual(260, '260', 'W=400 L=40 V=1 ');
initImageVirtual(261, '261', 'W=400 L=40 V=1 ');
initImageVirtual(262, '262', 'W=400 L=40 V=1 ');
initImageVirtual(263, '263', 'W=400 L=40 V=1 ');
initImageVirtual(264, '264', 'W=400 L=40 V=1 ');
initImageVirtual(265, '265', 'W=400 L=40 V=1 ');
initImageVirtual(266, '266', 'W=400 L=40 V=1 ');
initImageVirtual(267, '267', 'W=400 L=40 V=1 ');
initImageVirtual(268, '268', 'W=400 L=40 V=1 ');
initImageVirtual(269, '269', 'W=400 L=40 V=1 ');
initImageVirtual(270, '270', 'W=400 L=40 V=1 ');
initImageVirtual(271, '271', 'W=400 L=40 V=1 ');
initImageVirtual(272, '272', 'W=400 L=40 V=1 ');
initImageVirtual(273, '273', 'W=400 L=40 V=1 ');
initImageVirtual(274, '274', 'W=400 L=40 V=1 ');
initImageVirtual(275, '275', 'W=400 L=40 V=1 ');
initImageVirtual(276, '276', 'W=400 L=40 V=1 ');
initImageVirtual(277, '277', 'W=400 L=40 V=1 ');
initImageVirtual(278, '278', 'W=400 L=40 V=1 ');
initImageVirtual(279, '279', 'W=400 L=40 V=1 ');
initImageVirtual(280, '280', 'W=400 L=40 V=1 ');
initImageVirtual(281, '281', 'W=400 L=40 V=1 ');
initImageVirtual(282, '282', 'W=400 L=40 V=1 ');
initImageVirtual(283, '283', 'W=400 L=40 V=1 ');
initImageVirtual(284, '284', 'W=400 L=40 V=1 ');
initImageVirtual(285, '285', 'W=400 L=40 V=1 ');
initImageVirtual(286, '286', 'W=400 L=40 V=1 ');
initImageVirtual(287, '287', 'W=400 L=40 V=1 ');
initImageVirtual(288, '288', 'W=400 L=40 V=1 ');
initImageVirtual(289, '289', 'W=400 L=40 V=1 ');
initImageVirtual(290, '290', 'W=400 L=40 V=1 ');
initImageVirtual(291, '291', 'W=400 L=40 V=1 ');
initImageVirtual(292, '292', 'W=400 L=40 V=1 ');
initImageVirtual(293, '293', 'W=400 L=40 V=1 ');
initImageVirtual(294, '294', 'W=400 L=40 V=1 ');
initImageVirtual(295, '295', 'W=400 L=40 V=1 ');
initImageVirtual(296, '296', 'W=400 L=40 V=1 ');
initImageVirtual(297, '297', 'W=400 L=40 V=1 ');
initImageVirtual(298, '298', 'W=400 L=40 V=1 ');
initImageVirtual(299, '299', 'W=400 L=40 V=1 ');
initImageVirtual(300, '300', 'W=400 L=40 V=1 ');
initImageVirtual(301, '301', 'W=400 L=40 V=1 ');
initImageVirtual(302, '302', 'W=400 L=40 V=1 ');
initImageVirtual(303, '303', 'W=400 L=40 V=1 ');
initImageVirtual(304, '304', 'W=400 L=40 V=1 ');
initImageVirtual(305, '305', 'W=400 L=40 V=1 ');
initImageVirtual(306, '306', 'W=400 L=40 V=1 ');
initImageVirtual(307, '307', 'W=400 L=40 V=1 ');
initImageVirtual(308, '308', 'W=400 L=40 V=1 ');
initImageVirtual(309, '309', 'W=400 L=40 V=1 ');
initImageVirtual(310, '310', 'W=400 L=40 V=1 ');
initImageVirtual(311, '311', 'W=400 L=40 V=1 ');
initImageVirtual(312, '312', 'W=400 L=40 V=1 ');
initImageVirtual(313, '313', 'W=400 L=40 V=1 ');
initImageVirtual(314, '314', 'W=3460 L=630 V=1 ');
initImageVirtual(315, '315', 'W=3460 L=630 V=1 ');
initImageVirtual(316, '316', 'W=3460 L=630 V=1 ');
initImageVirtual(317, '317', 'W=3460 L=630 V=1 ');
initImageVirtual(318, '318', 'W=3460 L=630 V=1 ');
initImageVirtual(319, '319', 'W=3460 L=630 V=1 ');
initImageVirtual(320, '320', 'W=3460 L=630 V=1 ');
initImageVirtual(321, '321', 'W=3460 L=630 V=1 ');
initImageVirtual(322, '322', 'W=3460 L=630 V=1 ');
initImageVirtual(323, '323', 'W=3460 L=630 V=1 ');
initImageVirtual(324, '324', 'W=3460 L=630 V=1 ');
initImageVirtual(325, '325', 'W=3460 L=630 V=1 ');
initImageVirtual(326, '326', 'W=3460 L=630 V=1 ');
initImageVirtual(327, '327', 'W=3460 L=630 V=1 ');
initImageVirtual(328, '328', 'W=3460 L=630 V=1 ');
initImageVirtual(329, '329', 'W=3460 L=630 V=1 ');
initImageVirtual(330, '330', 'W=3460 L=630 V=1 ');
initImageVirtual(331, '331', 'W=3460 L=630 V=1 ');
initImageVirtual(332, '332', 'W=3460 L=630 V=1 ');
initImageVirtual(333, '333', 'W=3460 L=630 V=1 ');
initImageVirtual(334, '334', 'W=3460 L=630 V=1 ');
initImageVirtual(335, '335', 'W=3460 L=630 V=1 ');
initImageVirtual(336, '336', 'W=3460 L=630 V=1 ');
initImageVirtual(337, '337', 'W=3460 L=630 V=1 ');
initImageVirtual(338, '338', 'W=3460 L=630 V=1 ');
initImageVirtual(339, '339', 'W=3460 L=630 V=1 ');
initImageVirtual(340, '340', 'W=3460 L=630 V=1 ');
initImageVirtual(341, '341', 'W=3460 L=630 V=1 ');
initImageVirtual(342, '342', 'W=3460 L=630 V=1 ');
initImageVirtual(343, '343', 'W=3460 L=630 V=1 ');
initImageVirtual(344, '344', 'W=3460 L=630 V=1 ');
initImageVirtual(345, '345', 'W=3460 L=630 V=1 ');
initImageVirtual(346, '346', 'W=3460 L=630 V=1 ');
initImageVirtual(347, '347', 'W=3460 L=630 V=1 ');
initImageVirtual(348, '348', 'W=3460 L=630 V=1 ');
initImageVirtual(349, '349', 'W=3460 L=630 V=1 ');
initImageVirtual(350, '350', 'W=3460 L=630 V=1 ');
initImageVirtual(351, '351', 'W=3460 L=630 V=1 ');
initImageVirtual(352, '352', 'W=3460 L=630 V=1 ');
initImageVirtual(353, '353', 'W=3460 L=630 V=1 ');
initImageVirtual(354, '354', 'W=3460 L=630 V=1 ');
initImageVirtual(355, '355', 'W=3460 L=630 V=1 ');
initImageVirtual(356, '356', 'W=3460 L=630 V=1 ');
initImageVirtual(357, '357', 'W=3460 L=630 V=1 ');
initImageVirtual(358, '358', 'W=3460 L=630 V=1 ');
initImageVirtual(359, '359', 'W=3460 L=630 V=1 ');
initImageVirtual(360, '360', 'W=3460 L=630 V=1 ');
initImageVirtual(361, '361', 'W=3460 L=630 V=1 ');
initImageVirtual(362, '362', 'W=3460 L=630 V=1 ');
initImageVirtual(363, '363', 'W=3460 L=630 V=1 ');
initImageVirtual(364, '364', 'W=3460 L=630 V=1 ');
initImageVirtual(365, '365', 'W=3460 L=630 V=1 ');
initImageVirtual(366, '366', 'W=3460 L=630 V=1 ');
initImageVirtual(367, '367', 'W=3460 L=630 V=1 ');
initImageVirtual(368, '368', 'W=3460 L=630 V=1 ');
initImageVirtual(369, '369', 'W=3460 L=630 V=1 ');
initImageVirtual(370, '370', 'W=3460 L=630 V=1 ');
initImageVirtual(371, '371', 'W=3460 L=630 V=1 ');
initImageVirtual(372, '372', 'W=3460 L=630 V=1 ');
initImageVirtual(373, '373', 'W=3460 L=630 V=1 ');
initImageVirtual(374, '374', 'W=3460 L=630 V=1 ');
initImageVirtual(375, '375', 'W=3460 L=630 V=1 ');
initImageVirtual(376, '376', 'W=3460 L=630 V=1 ');
initImageVirtual(377, '377', 'W=3460 L=630 V=1 ');
initImageVirtual(378, '378', 'W=3460 L=630 V=1 ');
initImageVirtual(379, '379', 'W=3460 L=630 V=1 ');
initImageVirtual(380, '380', 'W=3460 L=630 V=1 ');
initImageVirtual(381, '381', 'W=3460 L=630 V=1 ');
initImageVirtual(382, '382', 'W=3460 L=630 V=1 ');
initImageVirtual(383, '383', 'W=3460 L=630 V=1 ');
initImageVirtual(384, '384', 'W=3460 L=630 V=1 ');
initImageVirtual(385, '385', 'W=3460 L=630 V=1 ');
initImageVirtual(386, '386', 'W=3460 L=630 V=1 ');
initImageVirtual(387, '387', 'W=3460 L=630 V=1 ');
initImageVirtual(388, '388', 'W=3460 L=630 V=1 ');
initImageVirtual(389, '389', 'W=3460 L=630 V=1 ');
initImageVirtual(390, '390', 'W=3460 L=630 V=1 ');
initImageVirtual(391, '391', 'W=3460 L=630 V=1 ');
initImageVirtual(392, '392', 'W=3460 L=630 V=1 ');
initImageVirtual(393, '393', 'W=3460 L=630 V=1 ');
initImageVirtual(394, '394', 'W=3460 L=630 V=1 ');
initImageVirtual(395, '395', 'W=3460 L=630 V=1 ');
initImageVirtual(396, '396', 'W=3460 L=630 V=1 ');
initImageVirtual(397, '397', 'W=3460 L=630 V=1 ');
initImageVirtual(398, '398', 'W=3460 L=630 V=1 ');
initImageVirtual(399, '399', 'W=3460 L=630 V=1 ');
initImageVirtual(400, '400', 'W=3460 L=630 V=1 ');
initImageVirtual(401, '401', 'W=3460 L=630 V=1 ');
initImageVirtual(402, '402', 'W=3460 L=630 V=1 ');
initImageVirtual(403, '403', 'W=3460 L=630 V=1 ');
initImageVirtual(404, '404', 'W=3460 L=630 V=1 ');
initImageVirtual(405, '405', 'W=3460 L=630 V=1 ');
initImageVirtual(406, '406', 'W=3460 L=630 V=1 ');
initImageVirtual(407, '407', 'W=3460 L=630 V=1 ');
initImageVirtual(408, '408', 'W=3460 L=630 V=1 ');
initImageVirtual(409, '409', 'W=3460 L=630 V=1 ');
initImageVirtual(410, '410', 'W=3460 L=630 V=1 ');
initImageVirtual(411, '411', 'W=3460 L=630 V=1 ');
initImageVirtual(412, '412', 'W=3460 L=630 V=1 ');
initImageVirtual(413, '413', 'W=3460 L=630 V=1 ');
initImageVirtual(414, '414', 'W=3460 L=630 V=1 ');
initImageVirtual(415, '415', 'W=3460 L=630 V=1 ');
initImageVirtual(416, '416', 'W=3460 L=630 V=1 ');
initImageVirtual(417, '417', 'W=3460 L=630 V=1 ');
initImageVirtual(418, '418', 'W=3460 L=630 V=1 ');
initImageVirtual(419, '419', 'W=3460 L=630 V=1 ');
initImageVirtual(420, '420', 'W=3460 L=630 V=1 ');
initImageVirtual(421, '421', 'W=3460 L=630 V=1 ');
initImageVirtual(422, '422', 'W=3460 L=630 V=1 ');
initImageVirtual(423, '423', 'W=3460 L=630 V=1 ');
initImageVirtual(424, '424', 'W=3460 L=630 V=1 ');
initImageVirtual(425, '425', 'W=3460 L=630 V=1 ');
initImageVirtual(426, '426', 'W=3460 L=630 V=1 ');
initImageVirtual(427, '427', 'W=3460 L=630 V=1 ');
initImageVirtual(428, '428', 'W=3460 L=630 V=1 ');
initImageVirtual(429, '429', 'W=3460 L=630 V=1 ');
initImageVirtual(430, '430', 'W=3460 L=630 V=1 ');
initImageVirtual(431, '431', 'W=3460 L=630 V=1 ');
initImageVirtual(432, '432', 'W=3460 L=630 V=1 ');
initImageVirtual(433, '433', 'W=3460 L=630 V=1 ');
initImageVirtual(434, '434', 'W=3460 L=630 V=1 ');
initImageVirtual(435, '435', 'W=3460 L=630 V=1 ');
initImageVirtual(436, '436', 'W=3460 L=630 V=1 ');
initImageVirtual(437, '437', 'W=3460 L=630 V=1 ');
initImageVirtual(438, '438', 'W=3460 L=630 V=1 ');
initImageVirtual(439, '439', 'W=3460 L=630 V=1 ');
initImageVirtual(440, '440', 'W=3460 L=630 V=1 ');
initImageVirtual(441, '441', 'W=3460 L=630 V=1 ');
initImageVirtual(442, '442', 'W=3460 L=630 V=1 ');
initImageVirtual(443, '443', 'W=3460 L=630 V=1 ');
initImageVirtual(444, '444', 'W=3460 L=630 V=1 ');
initImageVirtual(445, '445', 'W=3460 L=630 V=1 ');
initImageVirtual(446, '446', 'W=3460 L=630 V=1 ');
initImageVirtual(447, '447', 'W=3460 L=630 V=1 ');
initImageVirtual(448, '448', 'W=3460 L=630 V=1 ');
initImageVirtual(449, '449', 'W=3460 L=630 V=1 ');
initImageVirtual(450, '450', 'W=3460 L=630 V=1 ');
initImageVirtual(451, '451', 'W=3460 L=630 V=1 ');
initImageVirtual(452, '452', 'W=3460 L=630 V=1 ');
initImageVirtual(453, '453', 'W=3460 L=630 V=1 ');
initImageVirtual(454, '454', 'W=3460 L=630 V=1 ');
initImageVirtual(455, '455', 'W=3460 L=630 V=1 ');
initImageVirtual(456, '456', 'W=3460 L=630 V=1 ');
initImageVirtual(457, '457', 'W=3460 L=630 V=1 ');
initImageVirtual(458, '458', 'W=3460 L=630 V=1 ');
initImageVirtual(459, '459', 'W=3460 L=630 V=1 ');
initImageVirtual(460, '460', 'W=3460 L=630 V=1 ');
initImageVirtual(461, '461', 'W=3460 L=630 V=1 ');
initImageVirtual(462, '462', 'W=3460 L=630 V=1 ');
initImageVirtual(463, '463', 'W=3460 L=630 V=1 ');
initImageVirtual(464, '464', 'W=3460 L=630 V=1 ');
initImageVirtual(465, '465', 'W=3460 L=630 V=1 ');
initImageVirtual(466, '466', 'W=3460 L=630 V=1 ');
initImageVirtual(467, '467', 'W=3460 L=630 V=1 ');
initImageVirtual(468, '468', 'W=3460 L=630 V=1 ');
initImageVirtual(469, '469', 'W=3460 L=630 V=1 ');
initImageVirtual(470, '470', 'W=3460 L=630 V=1 ');
initImageVirtual(471, '471', 'W=3460 L=630 V=1 ');
initImageVirtual(472, '472', 'W=3460 L=630 V=1 ');
initImageVirtual(473, '473', 'W=3460 L=630 V=1 ');
initImageVirtual(474, '474', 'W=3460 L=630 V=1 ');
initImageVirtual(475, '475', 'W=3460 L=630 V=1 ');
initImageVirtual(476, '476', 'W=3460 L=630 V=1 ');
initImageVirtual(477, '477', 'W=3460 L=630 V=1 ');
initImageVirtual(478, '478', 'W=3460 L=630 V=1 ');
initImageVirtual(479, '479', 'W=3460 L=630 V=1 ');
initImageVirtual(480, '480', 'W=3460 L=630 V=1 ');
initImageVirtual(481, '481', 'W=3460 L=630 V=1 ');
initImageVirtual(482, '482', 'W=3460 L=630 V=1 ');
initImageVirtual(483, '483', 'W=3460 L=630 V=1 ');
initImageVirtual(484, '484', 'W=3460 L=630 V=1 ');
initImageVirtual(485, '485', 'W=3460 L=630 V=1 ');
initImageVirtual(486, '486', 'W=3460 L=630 V=1 ');
initImageVirtual(487, '487', 'W=3460 L=630 V=1 ');
initImageVirtual(488, '488', 'W=3460 L=630 V=1 ');
initImageVirtual(489, '489', 'W=3460 L=630 V=1 ');
initImageVirtual(490, '490', 'W=3460 L=630 V=1 ');
initImageVirtual(491, '491', 'W=3460 L=630 V=1 ');
initImageVirtual(492, '492', 'W=3460 L=630 V=1 ');
initImageVirtual(493, '493', 'W=3460 L=630 V=1 ');
initImageVirtual(494, '494', 'W=3460 L=630 V=1 ');
initImageVirtual(495, '495', 'W=3460 L=630 V=1 ');
initImageVirtual(496, '496', 'W=3460 L=630 V=1 ');
initImageVirtual(497, '497', 'W=3460 L=630 V=1 ');
initImageVirtual(498, '498', 'W=3460 L=630 V=1 ');
initImageVirtual(499, '499', 'W=3460 L=630 V=1 ');
initImageVirtual(500, '500', 'W=3460 L=630 V=1 ');
initImageVirtual(501, '501', 'W=3460 L=630 V=1 ');
initImageVirtual(502, '502', 'W=3460 L=630 V=1 ');
initImageVirtual(503, '503', 'W=3460 L=630 V=1 ');
initImageVirtual(504, '504', 'W=3460 L=630 V=1 ');
initImageVirtual(505, '505', 'W=3460 L=630 V=1 ');
initImageVirtual(506, '506', 'W=3460 L=630 V=1 ');
initImageVirtual(507, '507', 'W=3460 L=630 V=1 ');
initImageVirtual(508, '508', 'W=3460 L=630 V=1 ');
initImageVirtual(509, '509', 'W=3460 L=630 V=1 ');
initImageVirtual(510, '510', 'W=3460 L=630 V=1 ');
initImageVirtual(511, '511', 'W=3460 L=630 V=1 ');
initImageVirtual(512, '512', 'W=3460 L=630 V=1 ');
initImageVirtual(513, '513', 'W=3460 L=630 V=1 ');
initImageVirtual(514, '514', 'W=3460 L=630 V=1 ');
initImageVirtual(515, '515', 'W=3460 L=630 V=1 ');
initImageVirtual(516, '516', 'W=3460 L=630 V=1 ');
initImageVirtual(517, '517', 'W=3460 L=630 V=1 ');
initImageVirtual(518, '518', 'W=3460 L=630 V=1 ');
initImageVirtual(519, '519', 'W=3460 L=630 V=1 ');
initImageVirtual(520, '520', 'W=3460 L=630 V=1 ');
initImageVirtual(521, '521', 'W=3460 L=630 V=1 ');
initImageVirtual(522, '522', 'W=3460 L=630 V=1 ');
initImageVirtual(523, '523', 'W=3460 L=630 V=1 ');
initImageVirtual(524, '524', 'W=3460 L=630 V=1 ');
initImageVirtual(525, '525', 'W=3460 L=630 V=1 ');
initImageVirtual(526, '526', 'W=3460 L=630 V=1 ');
initImageVirtual(527, '527', 'W=3460 L=630 V=1 ');
initImageVirtual(528, '528', 'W=3460 L=630 V=1 ');
initImageVirtual(529, '529', 'W=3460 L=630 V=1 ');
initImageVirtual(530, '530', 'W=3460 L=630 V=1 ');
initImageVirtual(531, '531', 'W=3460 L=630 V=1 ');
initImageVirtual(532, '532', 'W=3460 L=630 V=1 ');
initImageVirtual(533, '533', 'W=3460 L=630 V=1 ');
initImageVirtual(534, '534', 'W=3460 L=630 V=1 ');
initImageVirtual(535, '535', 'W=3460 L=630 V=1 ');
initImageVirtual(536, '536', 'W=3460 L=630 V=1 ');
initImageVirtual(537, '537', 'W=3460 L=630 V=1 ');
initImageVirtual(538, '538', 'W=3460 L=630 V=1 ');
initImageVirtual(539, '539', 'W=3460 L=630 V=1 ');
initImageVirtual(540, '540', 'W=3460 L=630 V=1 ');
initImageVirtual(541, '541', 'W=3460 L=630 V=1 ');
initImageVirtual(542, '542', 'W=3460 L=630 V=1 ');
initImageVirtual(543, '543', 'W=3460 L=630 V=1 ');
initImageVirtual(544, '544', 'W=3460 L=630 V=1 ');
initImageVirtual(545, '545', 'W=3460 L=630 V=1 ');
initImageVirtual(546, '546', 'W=3460 L=630 V=1 ');
initImageVirtual(547, '547', 'W=3460 L=630 V=1 ');
initImageVirtual(548, '548', 'W=3460 L=630 V=1 ');
initImageVirtual(549, '549', 'W=3460 L=630 V=1 ');
initImageVirtual(550, '550', 'W=3460 L=630 V=1 ');
initImageVirtual(551, '551', 'W=3460 L=630 V=1 ');
initImageVirtual(552, '552', 'W=3460 L=630 V=1 ');
initImageVirtual(553, '553', 'W=3460 L=630 V=1 ');
initImageVirtual(554, '554', 'W=3460 L=630 V=1 ');
initImageVirtual(555, '555', 'W=3460 L=630 V=1 ');
initImageVirtual(556, '556', 'W=3460 L=630 V=1 ');
initImageVirtual(557, '557', 'W=3460 L=630 V=1 ');
initImageVirtual(558, '558', 'W=3460 L=630 V=1 ');
initImageVirtual(559, '559', 'W=3460 L=630 V=1 ');
initImageVirtual(560, '560', 'W=3460 L=630 V=1 ');
initImageVirtual(561, '561', 'W=3460 L=630 V=1 ');
initImageVirtual(562, '562', 'W=3460 L=630 V=1 ');
initImageVirtual(563, '563', 'W=3460 L=630 V=1 ');
initImageVirtual(564, '564', 'W=3460 L=630 V=1 ');
initImageVirtual(565, '565', 'W=3460 L=630 V=1 ');
initImageVirtual(566, '566', 'W=3460 L=630 V=1 ');
initImageVirtual(567, '567', 'W=3460 L=630 V=1 ');
initImageVirtual(568, '568', 'W=3460 L=630 V=1 ');
initImageVirtual(569, '569', 'W=3460 L=630 V=1 ');
initImageVirtual(570, '570', 'W=3460 L=630 V=1 ');
initImageVirtual(571, '571', 'W=3460 L=630 V=1 ');
initImageVirtual(572, '572', 'W=3460 L=630 V=1 ');
initImageVirtual(573, '573', 'W=3460 L=630 V=1 ');
initImageVirtual(574, '574', 'W=3460 L=630 V=1 ');
initImageVirtual(575, '575', 'W=3460 L=630 V=1 ');
initImageVirtual(576, '576', 'W=3460 L=630 V=1 ');
initImageVirtual(577, '577', 'W=3460 L=630 V=1 ');
initImageVirtual(578, '578', 'W=3460 L=630 V=1 ');
initImageVirtual(579, '579', 'W=3460 L=630 V=1 ');
initImageVirtual(580, '580', 'W=3460 L=630 V=1 ');
initImageVirtual(581, '581', 'W=3460 L=630 V=1 ');
initImageVirtual(582, '582', 'W=3460 L=630 V=1 ');
initImageVirtual(583, '583', 'W=3460 L=630 V=1 ');
initImageVirtual(584, '584', 'W=3460 L=630 V=1 ');
initImageVirtual(585, '585', 'W=3460 L=630 V=1 ');
initImageVirtual(586, '586', 'W=3460 L=630 V=1 ');
initImageVirtual(587, '587', 'W=3460 L=630 V=1 ');
initImageVirtual(588, '588', 'W=3460 L=630 V=1 ');
initImageVirtual(589, '589', 'W=3460 L=630 V=1 ');
initImageVirtual(590, '590', 'W=3460 L=630 V=1 ');
initImageVirtual(591, '591', 'W=3460 L=630 V=1 ');
initImageVirtual(592, '592', 'W=3460 L=630 V=1 ');
initImageVirtual(593, '593', 'W=3460 L=630 V=1 ');
initImageVirtual(594, '594', 'W=3460 L=630 V=1 ');
initImageVirtual(595, '595', 'W=3460 L=630 V=1 ');
initImageVirtual(596, '596', 'W=3460 L=630 V=1 ');
initImageVirtual(597, '597', 'W=3460 L=630 V=1 ');
initImageVirtual(598, '598', 'W=3460 L=630 V=1 ');
initImageVirtual(599, '599', 'W=3460 L=630 V=1 ');
initImageVirtual(600, '600', 'W=3460 L=630 V=1 ');
initImageVirtual(601, '601', 'W=3460 L=630 V=1 ');
initImageVirtual(602, '602', 'W=3460 L=630 V=1 ');
initImageVirtual(603, '603', 'W=3460 L=630 V=1 ');
initImageVirtual(604, '604', 'W=3460 L=630 V=1 ');
initImageVirtual(605, '605', 'W=3460 L=630 V=1 ');
initImageVirtual(606, '606', 'W=3460 L=630 V=1 ');
initImageVirtual(607, '607', 'W=3460 L=630 V=1 ');
initImageVirtual(608, '608', 'W=3460 L=630 V=1 ');
initImageVirtual(609, '609', 'W=3460 L=630 V=1 ');
initImageVirtual(610, '610', 'W=3460 L=630 V=1 ');
initImageVirtual(611, '611', 'W=3460 L=630 V=1 ');
initImageVirtual(612, '612', 'W=3460 L=630 V=1 ');
initImageVirtual(613, '613', 'W=3460 L=630 V=1 ');
initImageVirtual(614, '614', 'W=3460 L=630 V=1 ');
initImageVirtual(615, '615', 'W=3460 L=630 V=1 ');
initImageVirtual(616, '616', 'W=3460 L=630 V=1 ');
initImageVirtual(617, '617', 'W=3460 L=630 V=1 ');
initImageVirtual(618, '618', 'W=3460 L=630 V=1 ');
initImageVirtual(619, '619', 'W=3460 L=630 V=1 ');
initImageVirtual(620, '620', 'W=3460 L=630 V=1 ');
initImageVirtual(621, '621', 'W=3460 L=630 V=1 ');
initImageVirtual(622, '622', 'W=3460 L=630 V=1 ');
initImageVirtual(623, '623', 'W=3460 L=630 V=1 ');
initImageVirtual(624, '624', 'W=3460 L=630 V=1 ');
initImageVirtual(625, '625', 'W=3460 L=630 V=1 ');
initImageVirtual(626, '626', 'W=3460 L=630 V=1 ');
initImageVirtual(627, '627', 'W=3460 L=630 V=1 ');
initImageVirtual(628, '628', 'W=3460 L=630 V=1 ');
initImageVirtual(629, '629', 'W=3460 L=630 V=1 ');
initImageVirtual(630, '630', 'W=3460 L=630 V=1 ');
initImageVirtual(631, '631', 'W=3460 L=630 V=1 ');
initImageVirtual(632, '632', 'W=3460 L=630 V=1 ');
initImageVirtual(633, '633', 'W=3460 L=630 V=1 ');
initImageVirtual(634, '634', 'W=3460 L=630 V=1 ');
initImageVirtual(635, '635', 'W=3460 L=630 V=1 ');
initImageVirtual(636, '636', 'W=3460 L=630 V=1 ');
initImageVirtual(637, '637', 'W=3460 L=630 V=1 ');
initImageVirtual(638, '638', 'W=3460 L=630 V=1 ');
initImageVirtual(639, '639', 'W=3460 L=630 V=1 ');
initImageVirtual(640, '640', 'W=3460 L=630 V=1 ');
initImageVirtual(641, '641', 'W=3460 L=630 V=1 ');
initImageVirtual(642, '642', 'W=3460 L=630 V=1 ');
initImageVirtual(643, '643', 'W=3460 L=630 V=1 ');
initImageVirtual(644, '644', 'W=3460 L=630 V=1 ');
initImageVirtual(645, '645', 'W=3460 L=630 V=1 ');
initImageVirtual(646, '646', 'W=3460 L=630 V=1 ');
initImageVirtual(647, '647', 'W=3460 L=630 V=1 ');
initImageVirtual(648, '648', 'W=3460 L=630 V=1 ');
initImageVirtual(649, '649', 'W=3460 L=630 V=1 ');
initImageVirtual(650, '650', 'W=3460 L=630 V=1 ');
initImageVirtual(651, '651', 'W=3460 L=630 V=1 ');
initImageVirtual(652, '652', 'W=3460 L=630 V=1 ');
initImageVirtual(653, '653', 'W=3460 L=630 V=1 ');
initImageVirtual(654, '654', 'W=3460 L=630 V=1 ');
initImageVirtual(655, '655', 'W=3460 L=630 V=1 ');
initImageVirtual(656, '656', 'W=3460 L=630 V=1 ');
initImageVirtual(657, '657', 'W=3460 L=630 V=1 ');
setImgInfo(1, 888, 367, 500.000000, 50.000000, 1.000000);
setImgInfo(2, 888, 367, 500.000000, 50.000000, 1.000000);
setImgInfo(3, 512, 512, 1.000000, -2.000000, 1.000000);
setImgInfo(4, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(5, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(6, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(7, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(8, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(9, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(10, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(11, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(12, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(13, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(14, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(15, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(16, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(17, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(18, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(19, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(20, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(21, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(22, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(23, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(24, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(25, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(26, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(27, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(28, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(29, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(30, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(31, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(32, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(33, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(34, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(35, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(36, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(37, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(38, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(39, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(40, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(41, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(42, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(43, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(44, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(45, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(46, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(47, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(48, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(49, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(50, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(51, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(52, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(53, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(54, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(55, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(56, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(57, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(58, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(59, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(60, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(61, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(62, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(63, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(64, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(65, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(66, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(67, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(68, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(69, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(70, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(71, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(72, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(73, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(74, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(75, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(76, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(77, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(78, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(79, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(80, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(81, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(82, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(83, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(84, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(85, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(86, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(87, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(88, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(89, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(90, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(91, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(92, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(93, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(94, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(95, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(96, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(97, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(98, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(99, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(100, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(101, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(102, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(103, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(104, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(105, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(106, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(107, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(108, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(109, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(110, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(111, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(112, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(113, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(114, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(115, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(116, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(117, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(118, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(119, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(120, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(121, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(122, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(123, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(124, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(125, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(126, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(127, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(128, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(129, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(130, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(131, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(132, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(133, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(134, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(135, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(136, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(137, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(138, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(139, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(140, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(141, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(142, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(143, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(144, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(145, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(146, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(147, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(148, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(149, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(150, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(151, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(152, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(153, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(154, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(155, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(156, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(157, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(158, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(159, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(160, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(161, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(162, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(163, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(164, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(165, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(166, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(167, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(168, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(169, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(170, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(171, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(172, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(173, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(174, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(175, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(176, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(177, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(178, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(179, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(180, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(181, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(182, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(183, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(184, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(185, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(186, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(187, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(188, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(189, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(190, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(191, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(192, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(193, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(194, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(195, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(196, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(197, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(198, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(199, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(200, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(201, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(202, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(203, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(204, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(205, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(206, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(207, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(208, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(209, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(210, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(211, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(212, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(213, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(214, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(215, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(216, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(217, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(218, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(219, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(220, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(221, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(222, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(223, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(224, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(225, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(226, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(227, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(228, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(229, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(230, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(231, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(232, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(233, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(234, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(235, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(236, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(237, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(238, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(239, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(240, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(241, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(242, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(243, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(244, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(245, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(246, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(247, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(248, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(249, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(250, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(251, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(252, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(253, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(254, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(255, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(256, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(257, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(258, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(259, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(260, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(261, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(262, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(263, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(264, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(265, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(266, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(267, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(268, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(269, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(270, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(271, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(272, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(273, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(274, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(275, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(276, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(277, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(278, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(279, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(280, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(281, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(282, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(283, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(284, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(285, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(286, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(287, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(288, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(289, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(290, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(291, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(292, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(293, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(294, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(295, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(296, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(297, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(298, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(299, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(300, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(301, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(302, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(303, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(304, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(305, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(306, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(307, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(308, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(309, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(310, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(311, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(312, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(313, 512, 512, 400.000000, 40.000000, 1.000000);
setImgInfo(314, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(315, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(316, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(317, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(318, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(319, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(320, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(321, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(322, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(323, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(324, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(325, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(326, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(327, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(328, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(329, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(330, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(331, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(332, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(333, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(334, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(335, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(336, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(337, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(338, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(339, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(340, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(341, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(342, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(343, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(344, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(345, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(346, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(347, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(348, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(349, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(350, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(351, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(352, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(353, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(354, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(355, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(356, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(357, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(358, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(359, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(360, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(361, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(362, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(363, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(364, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(365, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(366, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(367, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(368, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(369, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(370, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(371, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(372, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(373, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(374, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(375, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(376, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(377, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(378, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(379, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(380, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(381, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(382, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(383, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(384, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(385, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(386, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(387, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(388, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(389, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(390, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(391, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(392, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(393, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(394, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(395, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(396, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(397, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(398, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(399, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(400, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(401, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(402, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(403, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(404, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(405, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(406, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(407, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(408, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(409, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(410, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(411, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(412, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(413, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(414, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(415, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(416, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(417, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(418, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(419, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(420, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(421, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(422, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(423, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(424, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(425, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(426, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(427, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(428, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(429, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(430, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(431, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(432, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(433, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(434, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(435, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(436, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(437, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(438, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(439, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(440, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(441, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(442, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(443, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(444, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(445, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(446, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(447, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(448, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(449, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(450, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(451, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(452, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(453, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(454, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(455, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(456, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(457, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(458, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(459, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(460, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(461, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(462, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(463, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(464, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(465, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(466, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(467, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(468, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(469, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(470, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(471, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(472, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(473, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(474, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(475, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(476, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(477, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(478, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(479, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(480, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(481, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(482, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(483, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(484, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(485, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(486, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(487, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(488, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(489, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(490, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(491, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(492, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(493, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(494, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(495, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(496, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(497, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(498, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(499, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(500, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(501, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(502, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(503, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(504, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(505, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(506, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(507, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(508, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(509, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(510, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(511, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(512, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(513, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(514, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(515, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(516, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(517, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(518, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(519, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(520, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(521, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(522, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(523, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(524, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(525, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(526, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(527, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(528, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(529, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(530, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(531, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(532, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(533, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(534, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(535, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(536, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(537, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(538, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(539, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(540, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(541, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(542, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(543, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(544, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(545, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(546, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(547, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(548, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(549, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(550, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(551, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(552, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(553, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(554, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(555, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(556, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(557, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(558, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(559, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(560, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(561, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(562, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(563, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(564, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(565, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(566, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(567, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(568, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(569, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(570, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(571, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(572, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(573, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(574, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(575, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(576, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(577, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(578, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(579, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(580, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(581, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(582, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(583, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(584, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(585, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(586, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(587, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(588, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(589, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(590, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(591, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(592, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(593, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(594, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(595, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(596, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(597, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(598, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(599, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(600, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(601, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(602, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(603, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(604, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(605, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(606, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(607, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(608, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(609, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(610, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(611, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(612, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(613, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(614, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(615, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(616, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(617, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(618, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(619, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(620, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(621, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(622, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(623, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(624, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(625, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(626, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(627, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(628, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(629, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(630, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(631, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(632, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(633, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(634, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(635, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(636, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(637, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(638, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(639, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(640, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(641, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(642, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(643, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(644, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(645, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(646, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(647, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(648, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(649, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(650, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(651, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(652, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(653, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(654, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(655, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(656, 512, 512, 3460.000000, 630.000000, 1.000000);
setImgInfo(657, 512, 512, 3460.000000, 630.000000, 1.000000);
var gPresets = [{'title':'Cool LUT','type':3,'w':-100000,'l':-100000},          {'title':'Ice LUT','type':3,'w':-100000,'l':-100000},          {'title':'Warm LUT','type':3,'w':-100000,'l':-100000},          {'title':'Thermal LUT','type':3,'w':-100000,'l':-100000},          {'title':'Ceretec LUT','type':3,'w':-100000,'l':-100000},          {'title':'PET LUT','type':3,'w':-100000,'l':-100000},          {'title':'Multi LUT','type':3,'w':-100000,'l':-100000},          {'title':'Thallium LUT','type':3,'w':-100000,'l':-100000},          {'title':'Blue LUT','type':3,'w':-100000,'l':-100000},          {'title':'10-Band LUT','type':3,'w':-100000,'l':-100000}];
function getCanvas(id)
{
  return (id) ? $(id) : $(gCanvasId);
}
function getSeries(canvas)
{
  var ser = null;
  if (canvas && typeof canvas.seriesIndex != "undefined")
    if (canvas.seriesIndex >= 0 && canvas.seriesIndex < gSeries.length)
      ser = gSeries[canvas.seriesIndex];
  return ser;
}
function getSeriesByCanvasId(canvasId)
{
  var ser = null;
  var canvas = getCanvas(canvasId);
  if (canvas)
    ser = getSeries(canvas);
  return ser;
}
function getShownIndex(canvas)
{
  if (typeof canvas.shownIndex != "undefined")
    return canvas.shownIndex;
  var ser = getSeries(canvas);
  return ser ? ser.shownIndex : null;
}

function ApplyMagToSeries()
{
  var ser = getSeriesByCanvasId(gCanvasId);
  if (ser)
  {
    var n = ser.shownIndex;
    var magDelta = gImgProps[n].magDelta;
    var roamPt = gImgProps[n].roamPt;
    for (var i = ser.firstIndex; i <= ser.lastIndex; i++)
      if (i != n)
      {
        gImgProps[i].magDelta = magDelta;
        gImgProps[i].roamPt.copyPt(roamPt);
      }
  }
}
function ApplyWLToSeries()
{
  var ser = getSeriesByCanvasId(gCanvasId);
  if (ser)
  {
    var n = ser.shownIndex;
    var preset = gImgProps[n].preset;
    var wl = gImgProps[n].getWL();
    for (var i = ser.firstIndex; i <= ser.lastIndex; i++)
      if (i != n)
      {
        gImgProps[i].preset = preset;
        gImgProps[i].setWL(wl);
      }
  }
}
function setPreset(i)
{
  var canvas = $(gCanvasId);
  var n = getShownIndex(canvas);
  if (i >= 0 && i < gPresets.length)
  {
    if (gPresets[i].w != gWLUnassigned && gPresets[i].l != gWLUnassigned)
      gImgProps[n].setWL({ w:gPresets[i].w, l:gPresets[i].l});
    else
      gImgProps[n].preset = gPresets[i];
    if (gToolId == "wla")
      ApplyWLToSeries();
  }
  else
  {
    gImgProps[n].resetWL();
    if (gToolId == "wla")
    {
      var ser = getSeries(canvas);
      if (ser)
        for (var i = ser.firstIndex; i <= ser.lastIndex; i++)
          if (i != ser.shownIndex)
            gImgProps[i].resetWL();
    }
  }
  ShowImage(gCanvasId, gQuality);
}
function setImgInfo(ext, cols, rows, w, l, slope)
{
  if (typeof gImgProps[ext] == 'undefined')
    initImageProp(ext);
  var imgProp = gImgProps[ext];
  if (imgProp)
  {
    imgProp.info = true;
    imgProp.origSize.x = cols;
    imgProp.origSize.y = rows;
    imgProp.origWL.w = w;
    imgProp.origWL.l = l;
    imgProp.origWL.slope = slope;
    imgProp.resetRoam();
    if (!imgProp.wl.isValid())
      imgProp.resetWL();
  }
  gImgCached[ext] = null;
}

function getSeriesCtrl()
{
  var sl = $("SeriesList");
  sl.options.length = 0;
  for (var i=0; i < gShownSeries.length;i++)
  {
    var s = gSeries[gShownSeries[i]].title;
    try {
      sl.add(new Option(s, s), null);
    } catch(e) {
      sl.add(new Option(s, s));
    }
  }
}

function ChangeSeries(sl)
{
  if (sl.options.length > 0 && sl.selectedIndex >= 0)
  {
    var serTitle = sl.options[sl.selectedIndex].text;
    if (isOptionHighlighted("serpersqr"))
    {
	  if (gCanvasId.length > 0)
	  {
        for (var i = 0; i < gShownSeries.length; i++)
        {
          if (gSeries[gShownSeries[i]].title == serTitle)
          {
            assignSeries(gCanvasId, i);
            updateImageId($(gCanvasId));
            break;
          }
        }
	  }
    }
    else
    {
      for (var i = 0; i < gSeries.length; i++)
      {
        if (gSeries[i].title == serTitle)
        {
          for (var j = 0; j < gShownList.length; j++)
          {
            if (gShownList[j] >= gSeries[i].firstIndex && gShownList[j] <= gSeries[i].lastIndex)
            {
              gShownList.first = j;
              resetCanvas();
              refreshImages();
              break;
            }
          }
          break;
        }
      }
    }
  }
}

function firstImage(id)
{
  var ser = getSeriesByCanvasId(id);
  if (ser && ser.shownIndex != ser.firstIndex)
  {
    ser.shownIndex = ser.firstIndex;
    ShowImage(id, gQuality);
  }
}
function lastImage(id)
{
  var ser = getSeriesByCanvasId(id);
  if (ser && ser.shownIndex != ser.lastIndex)
  {
    ser.shownIndex = ser.lastIndex;
    ShowImage(id, gQuality);
  }
}
function SkipImage(id, percent)
{
  if (percent != 0)
  {
    var ser = getSeriesByCanvasId(id);
    if (ser)
    {
      var total = ser.lastIndex - ser.firstIndex + 1;
      var inc = parseInt(total * Math.abs(percent) / 100.0 + 0.5);
      if (inc == 0)
        inc = 1;
      if (percent < 0)
        inc = -inc;
      nextImage(id, inc);
    }
  }
}
function nextImage(id, n)
{
  var ret = false;
  var ser = getSeriesByCanvasId(id);
  if (ser && n != 0)
  {
    var saveShowIndex = ser.shownIndex;
    ser.shownIndex += n;
    if (gLoop)
    {
	  if (ser.shownIndex > ser.lastIndex)
	    ser.shownIndex = ser.firstIndex;
      else if (ser.shownIndex < ser.firstIndex)
	    ser.shownIndex = ser.lastIndex;
    }
    else
    {
	   if (ser.shownIndex > ser.lastIndex)
	     ser.shownIndex = ser.lastIndex;
       else if (ser.shownIndex < ser.firstIndex)
	     ser.shownIndex = ser.firstIndex;
    }
    if (saveShowIndex != ser.shownIndex)
    {
      ShowImage(id, gQuality);
      ret = true;
    }
  }
  return ret;
}
function nextExamImage(inc)
{
  if (gSquareMode == "serpersqr")
    nextImage(null, inc);
  else if (gSquareMode == "imgpersqr")
    nextCanvas(inc);
}
function nextCanvas(inc)
{
  if (gCanvas.length > 0)
  {
    var n = 0;
    if (gCanvasId.length > 0)
    {
      for (var i = 0; i < gCanvas.length; i++)
        if (gCanvas[i].id == gCanvasId)
        {
          n = i + inc;
          while (n < 0)
          {
            if (gShownList.first > 0)
            {
              onPgUp();
              n += gCanvas.length;
            }
            else
              n = 0;
          }
          while (n >= gCanvas.length)
          {
            if ((gShownList.length - gShownList.first) > (gGrid.x * gGrid.y))
            {
              n -= gCanvas.length;
              onPgDn();
            }
            else
              n = gCanvas.length - 1;
          }
          break;
        }
    }
    selectCanvas(gCanvas[n].id);
  }
}
function initCanvasImg(canvas, seriesIndex, allowOneUp)
{
  var img = new Image();
  img.canvas = canvas;
  img.style.position = "absolute";
  canvas.img = img;

  canvas.seriesIndex = seriesIndex;
  if (allowOneUp)
    canvas.ondblclick = function() { return setOneUp(this); };

  canvas.oncontextmenu = onContextMenu;
  canvas.onmousedown = onMouseDown;
  canvas.onmousemove = onMouseMove;
  canvas.onmouseup = onMouseUp;

  canvas.style.position = "relative";
  canvas.style.overflow = "hidden";
  if (canvas.style.border)
    canvas.style.border = "1px solid black";
  else
    canvas.border = "1px";

  canvas.appendChild(img);
}
function detachCanvas()
{
  for (var i = 0; i < gCanvas.length; i++)
    if (gCanvas[i].parentNode)
      gCanvas[i].parentNode.removeChild(gCanvas[i]);
}
function resetCanvas()
{
  detachCanvas();
  gCanvas = new Array();
  var n = gGrid.x * gGrid.y;
  if (isOptionHighlighted("imgpersqr"))
  {
    if (n > (gShownList.length - gShownList.first))
      n = gShownList.length - gShownList.first;
    for (var i = 0; i < n; i++)
    {
      gCanvas[i] = document.createElement("div");
      gCanvas[i].id = "cnv_" + i;
      initCanvasImg(gCanvas[i], -1, true);
      gCanvas[i].shownIndex = gShownList[gShownList.first + i];
    }
  }
  else
  {
    if (n == 0)
    {
      gGrid.copyPt(bestFit(gShownSeries.length));
      updateGridDisplay(gGrid.y, gGrid.x);
      n = gGrid.x * gGrid.y;
    }
    if (n > (gShownSeries.length - gShownSeries.first))
      n = gShownSeries.length - gShownSeries.first;
    for (var i = 0; i < n; i++)
    {
      gCanvas[i] = document.createElement("div");
      gCanvas[i].id = "cnv_" + i;
      initCanvasImg(gCanvas[i], gShownSeries[gShownSeries.first + i], true);
    }
  }
}

function GetImgSrc(canvas, quality)
{
  var n = getShownIndex(canvas);
  var ip = gImgProps[n];

  src = n + ".jpg";
  return src;
}
function SetImgSrc(canvas, quality)
{
  var n = getShownIndex(canvas);
  if (gImgCached[n] && gImgCached[n].complete)
    canvas.img.src = gImgCached[n].src;
  else
    canvas.img.src = GetImgSrc(canvas, quality);
  var ip = gImgProps[n];
  if (ip.origSize.isZero())
  {
    ip.origSize.x = canvas.img.offsetWidth;
    ip.origSize.y = canvas.img.offsetHeight;
  }
  if (!ip.origSize.isZero())
  {
    var orig = ip.getOrigSize();
    var w = canvas.offsetWidth;
    var h = canvas.offsetHeight;
    var r1 = (1.0*orig.x) / orig.y;
    var r2 = (1.0*w) / h;
    var w2 = (r1 > r2) ? w : parseInt(h * r1);
    var h2 = (r1 > r2) ? parseInt(w/r1) : h;
    if ((w2 < orig.x && !gShrink) || (w2 > orig.x && !gExpand))
    {
      w2 = orig.x;
      h2 = orig.y;
    }
    w2 = parseInt(w2 * ip.getMagFactor() + 0.5);
    h2 = parseInt(h2 * ip.getMagFactor() + 0.5);
    canvas.img.style.width = w2  + "px";
    canvas.img.style.height = h2 + "px";
    var roamPt = new Point(0,0);
    roamPt.copyPt(ip.roamPt);
    adjustRoamPt(canvas, ip);
    var left = 0;
    var top = 0;
    if (typeof ip.vir != 'undefined' && typeof ip.vir.crop != 'undefined')
    {
      left = ip.vir.crop.left;
      top = ip.vir.crop.top;
    }
    canvas.img.style.top = parseInt(h / 2.0 - h2 * (1.0 * ip.roamPt.y - top) / orig.y) + "px";
    canvas.img.style.left = parseInt(w / 2.0 - w2 * (1.0 * ip.roamPt.x - left) / orig.x) + "px";
    ip.roamPt.copyPt(roamPt);
  }
}
function ShowImage(id, quality)
{
  var canvas = getCanvas(id);
  if (canvas)
  {
    SetImgSrc(canvas, quality);
    setTimeout(';', 10);
	updateImageId(canvas);
  }
}
function ShowMontage()
{
  var isMontage = isOptionHighlighted("montage");

  gActiveDiv = (isMontage) ? "imgMontage" : "imgCanvas";

  setVisible("imgMontage", isMontage);
  setVisible("imgCanvas", !isMontage);
  setVisible("sqrModeTbl", !isMontage);
  setVisible("gridTbl", !isMontage);
  setVisible("seriesTbl", !isMontage);

  refreshImages();
}
function updateImageId(canvas)
{
  $("ImgNumber").value = getShownIndex(canvas);
}

function playWav ()
{
  var s = "<embed src='" + gVoiceClipID +".wav' autostart=true loop=false style='width:200px;height:40px'>";
  var btnAudio = $("audio");
  var coord = getPageCoords(btnAudio);
  var p = new Popup(0, coord.y + btnAudio.offsetHeight + 4, 200, 60);
  p.div.innerHTML = s;
  p.div.style.backgroundColor = "transparent";
  p.div.style.border = "0px";
}
function viewDoc(obj)
{
  if (isOptionHighlighted("montage"))
    toggleMontage();
  else
    gShownSeries.grid.copyPt(gGrid);
  toggleOption(obj);
  gShownSeries = isOptionHighlighted("doc") ? gDocSeries : gImgSeries;
  gShownList = isOptionHighlighted("doc") ? gDocList : gImgList;
  getSeriesCtrl();
  resetCanvas();
  if (!setGridSize(gShownSeries.grid.y, gShownSeries.grid.x))
    refreshImages();
}
function viewNotes()
{
  var s = gStrNotes;
  s += "</td></tr></table>";
  var pN = new Popup(0, gIconHeight + 8, 400, 100);
  pN.div.innerHTML = s;
}
function viewReport()
{
  gowin_report(gReportID);
}
var gRW=new Array()
function stRW(reportid,wnd)
{
  this.reportid = reportid;
  this.wnd = wnd;
}
function gowin_report(reportid)
{
  var f=0, l
  for (l=0; l<gRW.length; l++)
  {
    if (gRW[l].reportid == reportid)
    {
      if(!gRW[l].wnd || gRW[l].wnd.closed)
        f=1;
      break;
    }
  }
  if ((1==f) || (l>=gRW.length))
  {
	var sFeatures = "'toolbar=1,location=0,directories=0,status=1";
    sFeatures += ",menubar=0,resizable=1,scrollbars=1,top=0,left=0";
    sFeatures += ",width=" +(screen.width-5) + ",height=" +(screen.height-80) +"'";
	var rsURL = reportid + ".pdf";
	var wnd = window.open(rsURL, reportid + '_win', sFeatures);
    if (l>=gRW.length)
      gRW[l] = new stRW(reportid,wnd);
    else
      gRW[l].wnd = wnd;
  }
  else
    gRW[l].wnd.focus();
}
function isVisible(id)
{
  var obj = $(id);
  return (obj) ? ((obj.style.display == "") ? true : false) : false;
}
function setVisible(id, vis)
{
  var obj = $(id);
  if (obj)
    obj.style.display = (vis) ? "" : "none";
}

function onBtnMouseOver(btn)
{
  if (btn && btn.style)
    btn.style.backgroundColor = BTN_HOVER_COLOR;
}
function onBtnMouseOut(btn)
{
  if (btn && btn.style)
    btn.style.backgroundColor = (btn.highlighted) ? BTN_HIGHTLIGHT_COLOR : BACKGROUND_COLOR;
}
function setBtnLabel(id, label)
{
  var btn = $(id);
  if (btn)
  {
    var s = btn.innerHTML;
    var n = s.search(/\<br/i);
    if (n >= 0)
      s = s.substring(0, n);
    if (label.length > 0)
      s += "<br />" + label;
    if (n >= 0 || label.length > 0)
      btn.innerHTML = s;
  }
}
function toggleBtnsLabel()
{
  gIconLabel = !gIconLabel;
  gIconWidth = (gIconLabel) ? 48 : 22;
  gIconHeight = (gIconLabel) ? 36 : 22;
  setBtnLabel("montage", (gIconLabel) ? "Montage" : "");
  setBtnLabel("imgpersqr", (gIconLabel) ? "Img/Sq" : "");
  setBtnLabel("serpersqr", (gIconLabel) ? "Ser/Sq" : "");
  setBtnLabel("tpan", (gIconLabel) ? "Paging" : "");
  setBtnLabel("tmag", (gIconLabel) ? "Magnify" : "");
  setBtnLabel("troam", (gIconLabel) ? "Roam" : "");
  setBtnLabel("tmeas", (gIconLabel) ? "Measure" : "");
  setBtnLabel("anno", (gIconLabel) ? "Anno" : "");
  setBtnLabel("audio", (gIconLabel) ? "Audio" : "");
  setBtnLabel("notes", (gIconLabel) ? "Notes" : "");
  setBtnLabel("report", (gIconLabel) ? "Report" : "");
  setBtnLabel("doc", (gIconLabel) ? "Document" : "");
  updateGridDisplay(gGrid.y, gGrid.x);
  initStyle();
  gToolbarHeight = $("toolbar").offsetHeight + 4;
  $("warning").style.display = "";
  refreshImages();
  onWindowResize();
}
function isOptionHighlighted(id)
{
  var obj = $(id);
  return (obj) ? obj.highlighted : false;
}
function setOptionHighlight(obj, highlight)
{
  obj.style.backgroundColor = (highlight) ? BTN_HIGHTLIGHT_COLOR : BACKGROUND_COLOR;
  obj.highlighted = highlight;
}
function toggleOption(obj) { if (obj) setOptionHighlight(obj, !obj.highlighted); }
function highlightOption(obj)
{
   var nodes = obj.parentNode.childNodes;
   for (var i = 0; i < nodes.length; i++)
     if (nodes[i].nodeName == "TD" && nodes[i].id)
       setOptionHighlight(nodes[i], false);
   setOptionHighlight(obj, true);
}
function toggleMontage()
{
  Popup.closeAll();
  if (gMontagePresent)
  {
    toggleOption($("montage"));
    ShowMontage();
  }
}
function chooseTool(obj)
{
  gToolId = obj.getAttribute("value") ? obj.getAttribute("value").substring(1) : obj.id.substring(1);
  highlightOption(obj);
  switch (gToolId)
  {
  case "roam":
    $("imgCanvas").style.cursor = 'pointer';
    $("imgMontage").style.cursor = 'pointer';
    break;
  default:
    $("imgCanvas").style.cursor = 'default';
    $("imgMontage").style.cursor = 'default';
    break;
  }
}
function chooseSquareMode(obj)
{
  gSquareMode = obj.id;
  if (!isOptionHighlighted(obj.id))
  {
     highlightOption(obj);
     resetCanvas();
     refreshImages();
  }
}
function changeTool(type, tool)
{
  var tl = $(type);
  if (tl)
  {
    tl.setAttribute("value", tool);
    chooseTool(tl)
    var img = $("i" + type);
    if (img)
      img.src = "..\\..\\Images\\" + tool + ".gif";
  }
}


function selectTool(tool)
{
  for (var i = 0; i < gTools.length; i++)
  {
    if (tool == gTools[i][0])
    {
      var s = "";
      s += "<table style='border-collapse:collapse;background-color:silver;'><tr>";
      for (var j = 1; j < gTools[i].length; j++)
      {
        var name = gTools[i][j][0];
        var desc = gTools[i][j][1];
        var label = gTools[i][j][2];
        s += "<td id='tt_" + j + "' class='toolBtn' onmouseover='onBtnMouseOver(this)' onmouseout='onBtnMouseOut(this)' title='" + desc + "' ";
        s += "onclick=\"changeTool('" + tool + "','" + name + "');Popup.closeAll();\"><img src='" + "..\\..\\Images\\" + name + ".gif'>";
        if (gIconLabel)
          s += "<br />" + label;
        s += "</td>";
      }
      s += "</tr></table>";
      var tl = $(tool);
      var c = getPageCoords(tl);
      var iw = gIconWidth + 2;
      var ih = gIconHeight + 2;
      var p = new Popup(c.x, c.y + tl.offsetHeight, (gTools[i].length - 1) * iw, ih);
      p.div.innerHTML = s;
      break;
    }
  }
}

var gHelpWindow;
function ShowHelp(loc)
{
  if(!gHelpWindow || gHelpWindow.closed)
  {
	var sFeatures = "toolbar=0,location=0,directories=0,status=0,menubar=1,resizable=1,scrollbars=1";
	sFeatures += ",top=0,left=400,width=500,height=400";
	gHelpWindow=window.open(loc,'HelpWindow',sFeatures);
  }
  else
    gHelpWindow.focus();
}
function assignSeries(canvasId, n2)
{
  var canvas1;
  var canvas2;
  var n1;
  var seriesIndex = gShownSeries[n2];

  for (var i = 0; i < gCanvas.length; i++)
  {
    if (gCanvas[i].id == canvasId)
    {
      n1 = i;
      canvas1 = gCanvas[i];
    }
    if (gCanvas[i].seriesIndex == seriesIndex)
      canvas2 = gCanvas[i];
  }
  if (canvas1 && n1 != n2)
  {
    if (n1 < gShownSeries.length && n2 < gShownSeries.length)
    {
      var t = gShownSeries[n1];
      gShownSeries[n1] = gShownSeries[n2];
      gShownSeries[n2] = t;
      canvas1.seriesIndex = gShownSeries[n1];
      if (canvas2)
        canvas2.seriesIndex = gShownSeries[n2];
    }
    SetImgSrc(canvas1, gQuality);
    if (canvas2)
      SetImgSrc(canvas2, gQuality);
  }
}
function deselectCanvas()
{
  if (gCanvasId.length > 0)
  {
    canvas = $(gCanvasId);
    if (canvas) canvas.style.border = "1px solid black";
    gCanvasId = "";
  }
}
function selectCanvas(id)
{
  deselectCanvas();
  var canvas = $(id);
  if (canvas)
  {
    gCanvasId = id;
    canvas.style.border = "1px solid YELLOW";
    updateImageId(canvas);
    var ser = getSeries(canvas);
    if (!ser)
    {
      var n = getShownIndex(canvas);
      for (var i = 0; i < gSeries.length; i++)
        if (n >= gSeries[i].firstIndex && n <= gSeries[i].lastIndex)
        {
          ser = gSeries[i];
          break;
        }
    }
    if (ser)
    {
      var sl = $("SeriesList");
      for (var i = 0; i < sl.options.length; i++)
        if (sl.options[i].text == ser.title)
        {
          sl.options[i].selected=true;
          break;
        }
    }
  }
}
function getMouseXY(e) {
  var coords = {x: 0, y: 0};
  if (!e) var e = window.event;
  if (e.pageX || e.pageY)
  {
    coords.x = e.pageX;
    coords.y = e.pageY;
  }
  else if (e.clientX || e.clientY)
  {
    coords.x = e.clientX + document.body.scrollLeft	+ document.documentElement.scrollLeft;
    coords.y = e.clientY + document.body.scrollTop	+ document.documentElement.scrollTop;
    if (isIE)
    {
      coords.x -= 2;
      coords.y -= 2;
    }
  }
  return coords
}
var overrideButton;
function onMouseDown(e)
{
  if (document.body.setCapture)
    document.body.setCapture();
  if (!e) e = window.event;
  if (e.preventDefault)
    e.preventDefault();
  if (e.stopPropagation)
    e.stopPropagation();
  if (window.event)
    window.event.returnValue = false;
  var targ = e.target || e.srcElement;
  var id = null;
  if (targ.tagName == "IMG" && targ.canvas)
    id = targ.canvas.id;
  else if (targ.tagName == "DIV" && targ.img)
    id = targ.id;
  Popup.closeAll();
  if (id && id.length > 0)
  {
    selectCanvas(id);
    if (e.which)
      gLeftButtonDown = (e.which == 1);
    else if (e.button)
      gLeftButtonDown = (e.button == 1);
    if (window.opera && e.which == 3)
    {
      if (!overrideButton){
        var doc = e.target.ownerDocument;
        overrideButton = doc.createElement('input');
        overrideButton.type='button';
        (doc.body||doc.documentElement).appendChild(overrideButton);
      }
      overrideButton.style='position:absolute;top:'+(e.clientY-2)+'px;left:'+(e.clientX-2)+'px;width:1px;height:1px;opacity:0.01';
    }
  }
  gStartPos.copyPt(getMouseXY(e));
  gEndPos.copyPt(gStartPos);
  gLastPos.copyPt(gStartPos);
  if (gLeftButtonDown && gCanvasId.length > 0)
  {
    var canvas = $(gCanvasId);
    var n = getShownIndex(canvas);
    switch (gToolId)
    {
    case "meas":
      break;
    case "mag2a":
    case "mag2":
      setSelectEndPt(canvas, gStartPos);
      break;
    case "maga":
    case "mag":
      gImgProps[n].roamPt.addPt(getImgPt(canvas, e));
      break;
    }
  }
  if (canvas.seriesIndex >= 0)
  {
    var ser = gSeries[canvas.seriesIndex];
    if (!ser.preload)
    {
      var nBeg = ser.firstIndex ;
      var nEnd = ser.lastIndex ;
      gImgCachCur   = 0;
      gTotlImgCache = nEnd - nBeg;
      for (var i=nBeg; i<=nEnd; i++)
      {
        if (gImgCached[i] == null)
        {
          setTimeout("preloadImages(" + i + "," + nEnd + ")", 10);
          break;
        }
      }
      ser.preload = true;
    }
  }
}
function cineImage(canvasId, n, flag)
{
  var canvas = getCanvas(canvasId);
  var ser = getSeries(canvas);
  if (canvas.img.complete)
  {
    if (flag == 0)
      setTimeout("cineImage('" + canvasId + "'," + n + ",1)", 3);
    else
    {
      if (n <= ser.lastIndex)
      {
        canvas.img.src = n + ".jpg";
        setTimeout("cineImage('" + canvasId + "'," + (n + 1) + ",0)", 5);
      }
      else
        canvas.img.src = ser.firstIndex + ".jpg";
     }
  }
  else
    setTimeout("cineImage('" + canvasId + "'," + n + ",0)", 10);
}
function preloadImages(start, end)
{
  var batchSize = 4;
  var last = ((end - start) >= batchSize) ? start + batchSize - 1 : end;
  var i;
  for (i=start; i<=last; i++)
  {
     if (gImgCached[i] == null)
     {
       gImgCached[i] = new Image();
       gImgCached[i].src = i + ".jpg";
     }
  }
  if (end != last)
  {
    var inc = true;
    for (i=start; i<=last; i++)
      if (!gImgCached[i].complete)
      {
        inc = false;
        break;
      }
    if (inc)
      start += batchSize;
    setTimeout("preloadImages(" + start + "," + end + ")", 10);
    }
}
function onMouseMove(e)
{
  if (!e) e = window.event;
  if (gLeftButtonDown)
  {
    if (e.preventDefault)
      e.preventDefault();
    if (window.event)
      window.event.returnValue = false;

    var canvas = $(gCanvasId);
    var n = getShownIndex(canvas);
    var mousePos = getMouseXY(e);
    if (!gLastPos.equal(mousePos))
    {
      var deltaX = gStartPos.x - mousePos.x;
      var deltaY = gStartPos.y - mousePos.y;;
      switch (gToolId)
      {
      case "meas":
        drawLine(canvas, gStartPos.x,gStartPos.y,mousePos.x,mousePos.y,"black", "white");
        break;
      case "mag2a":
      case "mag2":
        setSelectEndPt(canvas, mousePos);
        break;
      case "maga":
      case "mag":
        if (deltaY != 0)
        {
          var oldMagDelta = gImgProps[n].magDelta;
          gImgProps[n].magDelta += deltaY;
          if (gImgProps[n].magDelta < 0)
            gImgProps[n].magDelta = 0;
          if (oldMagDelta != gImgProps[n].magDelta)
	          ShowImage(gCanvasId, gQuality);
          gStartPos.copyPt(mousePos);
        }
        break;
      case "wla":
      case "wl":
        gImgProps[n].addWL(deltaX, deltaY);
        ShowImage(gCanvasId, gQuality);
        gStartPos.copyPt(mousePos);
        break;
      case "roam":
        var m = gImgProps[n].getTotalMag(canvas);
        gImgProps[n].roamPt.add(deltaX / m, deltaY / m);
        ShowImage(gCanvasId, gQuality);
        gStartPos.copyPt(mousePos);
        break;
      case "pan":
        if (gSquareMode == "serpersqr")
        {
          var delta = Math.abs(deltaY);
          if (delta > 2)
          {
            var inc = parseInt((delta - 1) / 10) + 1;
            if (deltaY < 0) inc *= -1;
            deltaX = deltaY = 0;
            nextImage(gCanvasId, inc);
            gStartPos.copyPt(mousePos);
          }
        }
        break;
      }
      gLastPos.copyPt(mousePos);
    }
  }
}
function onMouseUp(e)
{
  gPending = false;

  if (!e) e = window.event;
  if (overrideButton)
  {
    overrideButton.parentNode.removeChild(overrideButton);
    overrideButton = undefined;
    onContextMenu(e);
  }
  else if (gLeftButtonDown && e.ctrlKey)
  {
    onContextMenu(e);
  }
  if (e.preventDefault)
    e.preventDefault();
  if (e.stopPropagation)
    e.stopPropagation();
  if (window.event)
    window.event.returnValue = false;
  if (document.body.releaseCapture)
    document.body.releaseCapture();
  if (gLeftButtonDown)
  {
    var canvas = $(gCanvasId);
    var n = getShownIndex(canvas);
    var mousePos = getMouseXY(e);
    var imgProp = gImgProps[n];
    switch (gToolId)
    {
    case "meas":
      if (Math.abs(gStartPos.x - gEndPos.x) > 3 || Math.abs(gStartPos.y - gEndPos.y) > 3)
      {
        var coord = getPageCoords(canvas);
        var center = new Point(coord.x + canvas.offsetWidth / 2, coord.y + canvas.offsetHeight / 2);
        var pt1 = new Point(gStartPos.x - center.x, gStartPos.y - center.y);
        var pt2 = new Point(gEndPos.x - center.x, gEndPos.y - center.y);
        var m = imgProp.getTotalMag(canvas);
        pt1.x = parseInt(pt1.x / m + imgProp.roamPt.x);
        pt1.y = parseInt(pt1.y / m + imgProp.roamPt.y);
        pt2.x = parseInt(pt2.x / m + imgProp.roamPt.x);
        pt2.y = parseInt(pt2.y / m + imgProp.roamPt.y);
        if (imgProp.meas.length > 0)
          imgProp.meas += ";";
        imgProp.meas += pt1.toString() + "," + pt2.toString();
        ShowImage(gCanvasId, gQuality);
      }
      clearLine(canvas);
      break;
    case "mag2":
    case "mag2a":
      setSelectEndPt(canvas, mousePos);
      var divSel = $("divSelect");
      if (divSel.offsetWidth > 5 && divSel.offsetHeight > 5)
      {
        var coord2 = getPageCoords(divSel);
        var coord = getPageCoords(canvas);
        var m = imgProp.getTotalMag(canvas);
        var x = (coord2.x + (divSel.offsetWidth / 2) - (coord.x + canvas.offsetWidth / 2)) / m;
        var y = (coord2.y + (divSel.offsetHeight / 2) - (coord.y + canvas.offsetHeight / 2)) / m;
        imgProp.roamPt.add(x, y);
        var magFactor = imgProp.getMagFactor() * canvas.offsetHeight / divSel.offsetHeight;
        imgProp.magDelta = (magFactor - 1.0) * 100.0;
        ShowImage(gCanvasId, gQuality);
        if (gToolId == "mag2a")
          ApplyMagToSeries();
      }
      divSel.style.display = "none";
      break;
    case "mag":
    case "maga":
      adjustRoamPt(canvas, imgProp);
      if (gToolId == "maga")
        ApplyMagToSeries();
      break;
    case "wla":
      ApplyWLToSeries();
      break;
    }
    ShowImage(gCanvasId, gQuality);
  }
  gLeftButtonDown = false;
}
function onPgUp()
{
  if (isVisible("sqrModeTbl"))
  {
    var n = gGrid.x * gGrid.y;
    var cnt = gCanvas.length;
    var changed = false;
    if (isOptionHighlighted("serpersqr"))
    {
      if (gShownSeries.first > 0)
      {
        gShownSeries.first -= n;
        if (gShownSeries.first < 0)
          gShownSeries.first = 0;
        var max = Math.min(n, gShownSeries.length);
        for (var i = 0; i < max; i++)
        {
          if (i >= cnt)
          {
            gCanvas[i] = document.createElement("div");
            gCanvas[i].id = "cnv_" + i;
            initCanvasImg(gCanvas[i], gShownSeries[gShownSeries.first + i], true);
          }
          else
            gCanvas[i].seriesIndex = gShownSeries[gShownSeries.first + i];
        }
        changed = true;
      }
    }
    else
    {
      if (gShownList.first > 0)
      {
        gShownList.first -= n;
        if (gShownList.first < 0)
          gShownList.first = 0;
        var max = Math.min(n, gShownList.length);
        for (var i = 0; i < max; i++)
        {
          if (i >= cnt)
          {
            gCanvas[i] = document.createElement("div");
            gCanvas[i].id = "cnv_" + i;
            initCanvasImg(gCanvas[i], -1, true);
          }
          gCanvas[i].shownIndex = gShownList[gShownList.first + i];
        }
        changed = true;
      }
    }
    if (changed)
      refreshImages();
  }
}
function onPgDn()
{
  if (isVisible("sqrModeTbl"))
  {
    var n = gGrid.x * gGrid.y;
    var cnt = gCanvas.length;
    var changed = false;
    if (isOptionHighlighted("serpersqr"))
    {
      if ((gShownSeries.length - gShownSeries.first) > n)
      {
        gShownSeries.first += n;
        var max = Math.min(n, gShownSeries.length - gShownSeries.first);
        for (var i = 0; i < cnt; i++)
        {
          if (i < max)
            gCanvas[i].seriesIndex = gShownSeries[gShownSeries.first + i];
          else if (gCanvas[i].parentNode)
            gCanvas[i].parentNode.removeChild(gCanvas[i]);
        }
        if (max < cnt)
          gCanvas.splice(max, cnt - max);
        changed = true;
      }
    }
    else
    {
      if ((gShownList.length - gShownList.first) > n)
      {
        gShownList.first += n;
        var max = Math.min(n, gShownList.length - gShownList.first);
        for (var i = 0; i < cnt; i++)
        {
          if (i < max)
            gCanvas[i].shownIndex = gShownList[gShownList.first + i];
          else if (gCanvas[i].parentNode)
            gCanvas[i].parentNode.removeChild(gCanvas[i]);
        }
        if (max < cnt)
          gCanvas.splice(max, cnt - max);
        changed = true;
      }
    }
    if (changed)
      refreshImages();
  }
}
function onUp()
{
  var n = getShownIndex($(gCanvasId));
  //if (gToolId == "pan")
  {
    gImgProps[n].roamPt.add(0, -5);
    adjustRoamPt(canvas, gImgProps[n]);
    ShowImage(gCanvasId, gQuality);
  }
}
function onDown()
{
  var n = getShownIndex($(gCanvasId));
  //if (gToolId == "pan")
  {
    gImgProps[n].roamPt.add(0, 5);
    adjustRoamPt(canvas, gImgProps[n]);
    ShowImage(gCanvasId, gQuality);
  }
}
function onLeft()
{
  var n = getShownIndex($(gCanvasId));
  //if (gToolId == "pan")
  {
    gImgProps[n].roamPt.add(-5, 0);
    adjustRoamPt(canvas, gImgProps[n]);
    ShowImage(gCanvasId, gQuality);
  }
}
function onRight()
{
  var n = getShownIndex($(gCanvasId));
  //if (gToolId == "pan")
  {
    gImgProps[n].roamPt.add(5, 0);
    adjustRoamPt(canvas, gImgProps[n]);
    ShowImage(gCanvasId, gQuality);
  }
}

function toggleExpand()
{
  var saveId = gCanvasId;
  gExpand = !gExpand;
  refreshImages();
  selectCanvas(saveId);
}
function toggleShrink()
{
  var saveId = gCanvasId;
  gShrink = !gShrink;
  refreshImages();
  selectCanvas(saveId);
}
function onKeyDown(e)
{
  if (!e) e = window.event;
  var key = (e.charCode) ? e.charCode : ((e.keyCode) ? e.keyCode : ((e.which) ? e.which : 0));
  switch (key)
  {
  case 33: onPgUp(); break;
  case 34: onPgDn(); break;
  case 37: onLeft(); break;
  case 38: onUp(); break;
  case 39: onRight(); break;
  case 40: onDown(); break;
  case 69: toggleExpand(); break;
  case 76: toggleBtnsLabel(); break;
  case 77: toggleMontage(); break;
  case 78: if (e.altKey == true) { nextExamImage(1);  }  break;
  case 80: if (e.altKey == true) { nextExamImage(-1); }  break;
  case 83: toggleShrink(); break;
  }
}
function getPixel(x, y, color)
{
  var p = document.createElement("div");
  p.style.position = "absolute";
  p.style.left = x + "px";
  p.style.top = y + "px";
  p.style.width = "1px";
  p.style.height = "1px";
  p.style.backgroundColor = color;
  p.style.overflow = "hidden";
  return p;
}
function clearLine(canvas)
{
  while (canvas.childNodes.length > 1)
    canvas.removeChild(canvas.childNodes[1]);
}
function drawLine(canvas, x1, y1, x2, y2, c1, c2)
{
  clearLine(canvas);
  var coord = getPageCoords(canvas);
  var coord2 = getPageCoords(canvas.img);
  var top = coord2.y - coord.y;
  var left = coord2.x - coord.x;
  x1 -= coord.x; y1 -= coord.y;
  x2 -= coord.x; y2 -= coord.y;
  var right = left + canvas.img.offsetWidth;
  var bottom = top + canvas.img.offsetHeight;
  left+=2; top+=2; right-=2; bottom-=2;
  if (x2 < left || x2 > right || y2 < top || y2 > bottom)
  {
    var m;
    if (x1 != x2)
      m = (y1 - y2) / (x1 - x2);
    if (x2 < left)
    {
      if (x1 != x2) y2 += parseInt(m * (left - x2) + 0.5);
      x2 = left;
    }
    else if (x2 > right)
    {
      if (x1 != x2) y2 += parseInt(m * (right - x2) + 0.5);
      x2 = right;
    }
    if (y2 < top)
    {
      if (y1 != y2) x2 += parseInt((top - y2) / m + 0.5);
      y2 = top;
    }
    else if (y2 > bottom)
    {
      if (y1 != y2) x2 += parseInt((bottom - y2) / m + 0.5);
      y2 = bottom;
    }
  }
  gEndPos = new Point(x2, y2);
  if (isIE)
    gEndPos.addPt(coord);

  var steep = Math.abs(y2 - y1) > Math.abs(x2 - x1);
  var t;
  var line = new Array();
  var i = 0;
  if (steep)
  {
    t = y1; y1 = x1; x1 = t;
    t = y2; y2 = x2; x2 = t;
  }
  if (x1 > x2)
  {
    t = x1; x1 = x2; x2 = t;
    t = y1; y1 = y2; y2 = t;
  }
  var deltaX = x2 - x1;
  var halfDeltaX = deltaX / 2;
  var deltaErr = Math.abs(y2 - y1);
  var error = 0;
  var yStep = (y1 < y2) ? 1: -1;
  var y = y1;
  var c = c1;

  for (var x = x1; x <= x2; x++)
  {
    if(steep)
      canvas.appendChild(getPixel(y, x, c));
    else
      canvas.appendChild(getPixel(x, y, c));
    c = (c == c1) ? c2 : c1;
    error += deltaErr;
    if (error >= halfDeltaX)
    {
      y += yStep;
      error -= deltaX;
    }
  }
}
function setSelectEndPt(canvas, pt)
{
  var coord = getPageCoords(canvas);
  var sel = $("divSelect");
  var pt1 = new Point(gStartPos.x, gStartPos.y);
  if (pt1.x > pt.x)
  {
    pt1.x = pt.x;
    pt.x = gStartPos.x;
  }
  if (pt1.y > pt.y)
  {
    pt1.y = pt.y;
    pt.y = gStartPos.y;
  }
  var l = coord.x + 1;
  var t = coord.y + 1;
  var r = coord.x + canvas.offsetWidth - 3;
  var b = coord.y + canvas.offsetHeight - 3;
  if (pt1.x < l) pt1.x = l;
  if (pt.x > r) pt.x = r;
  if (pt1.y < t) pt1.y = t;
  if (pt.y > b) pt.y = b;
  if (pt.x == pt1.x) pt.x++;
  if (pt.y == pt1.y) pt.y++;

  var xRatio = canvas.offsetWidth / (pt.x - pt1.x);
  var yRatio = canvas.offsetHeight / (pt.y - pt1.y);
  if (xRatio > yRatio)
  {
    pt.y = parseInt(canvas.offsetHeight / xRatio + pt1.y);
  } else if (yRatio > xRatio)
  {
    pt.x = parseInt(canvas.offsetWidth / yRatio + pt1.x);
  }

  var w = pt.x - pt1.x;
  var h = pt.y - pt1.y;
  if (w > 5 && h > 5)
  {
    sel.style.display = "";
    if (pt1.y != gStartPos.y) pt1.y = gStartPos.y - h;
    if (pt1.x != gStartPos.x) pt1.x = gStartPos.x - w;
    sel.style.top = pt1.y + "px";
    sel.style.left = pt1.x + "px";
    sel.style.height = h + "px";
    sel.style.width = w + "px";
  }
  else
  {
    sel.style.display = "none";
    sel.style.top = gStartPos.y + "px";
    sel.style.left = gStartPos.x + "px";
    sel.style.height = "1px";
    sel.style.width = "1px";
  }
}
function getImgPt(canvas, e)
{
  var n = getShownIndex(canvas);
  var coord = getPageCoords(canvas);
  var mousePos = getMouseXY(e);
  var m = gImgProps[n].getTotalMag(canvas);
  var x = (mousePos.x - coord.x - (canvas.offsetWidth / 2)) / m;
  var y = (mousePos.y - coord.y - (canvas.offsetHeight / 2)) / m;
  return new Point(parseInt(x), parseInt(y));
}
function adjustRoamPt(canvas, imgProp)
{
  //if (imgProp.magDelta <= 0)
  //  resetMag(canvas.id, false);
  //else
  //{
    var m = imgProp.getTotalMag(canvas);
    var w = canvas.offsetWidth / m;
    var h = canvas.offsetHeight / m;
    var left = 0;
    var top = 0;
    var right = imgProp.origSize.x;
    var bottom = imgProp.origSize.y;
    if (typeof imgProp.vir != 'undefined' && typeof imgProp.vir.crop != 'undefined')
    {
      left = imgProp.vir.crop.left;
      top = imgProp.vir.crop.top;
      right = imgProp.vir.crop.right;
      bottom = imgProp.vir.crop.bottom;
    }
    var w2 = right - left;
    var h2 = bottom - top;
    if (w > w2)
      imgProp.roamPt.x = parseInt(w2 / 2) + left;
    else if ((imgProp.roamPt.x - left) < (w / 2))
      imgProp.roamPt.x = parseInt(w / 2) + left;
    else if ((w2 - (imgProp.roamPt.x - left)) < (w / 2))
      imgProp.roamPt.x = w2 - parseInt(w / 2) + left;
    if (h > h2)
      imgProp.roamPt.y = parseInt(h2 / 2) + top;
    else if ((imgProp.roamPt.y - top) < (h / 2))
      imgProp.roamPt.y = parseInt(h / 2) + top;
    else if ((h2 - (imgProp.roamPt.y - top)) < (h / 2))
      imgProp.roamPt.y = h2 - parseInt(h / 2) + top;
  //}
}
function deltaToWL(delta, origWL, slope)
{
  var wl = new WL(origWL.w, origWL.l);
  wl.w += delta.x * slope;
  wl.l += delta.y * slope;
  return wl;
}
function wlToDelta(wl, origWL, slope)
{
  var delta = new Point(wl.w - origWL.w, wl.l - origWL.l);
  delta.x /= slope;
  delta.y /= slope;
  return delta;
}
function setMagFactor(canvasId, f)
{
  var canvas = $(canvasId);
  var n = getShownIndex(canvas);
  var magFactor = f / gImgProps[n].getScale(canvas);
  gImgProps[n].magDelta = (magFactor - 1.0) * 100.0;
  adjustRoamPt(canvas, gImgProps[n])
  ShowImage(canvasId, gQuality);
  if (gToolId == "maga" || gToolId == "mag2a")
    ApplyMagToSeries();
}
function resetMag(canvasId, refresh)
{
  if (canvasId.length > 0)
  {
    var canvas = $(canvasId);
    if (canvas)
    {
      var imgProp = gImgProps[getShownIndex(canvas)];
      imgProp.resetMag();
      if (refresh)
        ShowImage(canvasId, gQuality);
      if (gToolId == "maga" || gToolId == "mag2a")
      {
        var ser = getSeries(canvas);
        if (ser)
          for (var i = ser.firstIndex; i <= ser.lastIndex; i++)
            gImgProps[i].resetMag();
      }
    }
  }
}
function resetMeas(canvasId, refresh)
{
  if (canvasId.length > 0)
  {
    var canvas = $(canvasId);
    if (canvas)
    {
      var imgProp = gImgProps[getShownIndex(canvas)];
      imgProp.meas = "";
      if (refresh)
        ShowImage(canvasId, gQuality);
    }
  }
}

function onContextMenu(e)
{
  if (window.event)
    window.event.returnValue = false;
  var mousePos = getMouseXY(e);
  var mnu = null;
  switch (gToolId)
  {
  case "meas":
    mnu = new Menu(
      ["Reset", "resetMeas(gCanvasId, true)"]
    );
    break;
    break;
  case "roam":
  case "mag":
  case "mag2":
  case "maga":
  case "mag2a":
    mnu = new Menu(
      ["Reset", "resetMag(gCanvasId, true)"],
      ["-", ""],
      ["100%", "setMagFactor(gCanvasId, 1.0)"],
      ["120%", "setMagFactor(gCanvasId, 1.2)"],
      ["150%", "setMagFactor(gCanvasId, 1.5)"],
      ["200%", "setMagFactor(gCanvasId, 2.0)"],
      ["250%", "setMagFactor(gCanvasId, 2.5)"],
      ["300%", "setMagFactor(gCanvasId, 3.0)"],
      ["400%", "setMagFactor(gCanvasId, 4.0)"],
      ["500%", "setMagFactor(gCanvasId, 5.0)"]
    );
    break;
  case "wla":
  case "wl":
    mnu = new Menu(["Reset", "setPreset(-1)"]);
    mnu.addItem("-", "");
    for (var i = 0; i < gPresets.length; i++)
      mnu.addItem(gPresets[i].title, "setPreset(" + i + ")");
    break;
  case "pan":
    mnu = new Menu(
      ["First", "firstImage(gCanvasId)"],
      ["Last", "lastImage(gCanvasId)"],
      ["Previous", "nextImage(gCanvasId, -1)"],
      ["Next", "nextImage(gCanvasId, 1)"],
      ["Skip 10% backward", "SkipImage(gCanvasId, -10)"],
      ["Skip 10% forward", "SkipImage(gCanvasId, 10)"]
    );
    break;
  }
  if (mnu)
    mnu.popUp(mousePos.x, mousePos.y);
  return false;
}
function handleWheel(delta)
{
  if (gSquareMode == "serpersqr")
  {
    var inc = 0;
    var d = Math.abs(delta);
    if (d > 0)
    {
      inc = parseInt((d - 1) / 5) + 1;
      if (delta < 0) inc *= -1;
      nextImage(gCanvasId, inc);
    }
  }
  else
  {
    if (delta > 0)
      onPgUp();
    else
      onPgDn();
  }
}
function wheel(event)
{
  var delta = 0;
  if (!event) event = window.event;
  if (event.wheelDelta)
  {
    delta = event.wheelDelta/120;
    if (window.opera) delta = -delta;
  }
  else if (event.detail)
    delta = -event.detail/3;
  if (delta)
    handleWheel(delta);
}
function refreshImages()
{
  deselectCanvas();
  adjustImages();
  if (isOptionHighlighted("montage"))
    selectCanvas(montageId);
  else if (gCanvas.length > 0)
    selectCanvas(gCanvas[0].id);
}
function getCell(tbl, row, col)
{
  return tbl.childNodes[0].childNodes[row].childNodes[col];
}
function addCell(tr)
{
  var td = document.createElement("TD");
  tr.appendChild(td);
  return td;
}
function addRow(tbl)
{
  var tr = document.createElement("TR");
  tbl.childNodes[0].appendChild(tr);
  return tr;
}
function createTable(border, numRow, numCol)
{
  var tbl = document.createElement("TABLE");
  if (tbl.style.borderCollapse)
    tbl.style.borderCollapse = "collapse";
  tbl.border = border + "px";
  tbl.borderColor = "white";
  tbl.cellPadding = 0;
  var tbody = document.createElement("TBODY");
  tbl.appendChild(tbody);
  for (var i = 0; i < numRow; i++)
  {
    var tr = addRow(tbl);
    for (var j = 0; j < numCol; j++)
      addCell(tr);
  }
  return tbl;
}
function adjustImages()
{
  if (isOptionHighlighted("montage"))
  {
    if (gMontage)
      SetImgSrc(gMontage, gQuality);
  }
  else if (gCanvas.length > 0)
  {
    var w = winWidth;
    var h = winHeight - gToolbarHeight;
    detachCanvas();
    var numRows = gGrid.y;
    var numCols = gGrid.x;
    w = parseInt((w - 1)/ numCols) - 2 - 1;
    h = parseInt((h - 1)/ numRows) - 2 - 1;
    var cellWidth = w;
    var cellHeight = h;
    var tbl = createTable(1, numRows, numCols);
    var i = 0;
    for (var r = 0; r < numRows; r++)
    {
      for (var c = 0; c < numCols; c++, i++)
      {
        var td = getCell(tbl, r, c);
        if (i < gCanvas.length)
        {
          gCanvas[i].style.width = w + "px";
          gCanvas[i].style.height = h + "px";
          gCanvas[i].style.border = "1px solid black";
          td.appendChild(gCanvas[i]);
        }
        else
        {
          td.style.height = cellHeight + "px";
          td.style.width = cellWidth + "px";
        }
      }
    }
    var div = $(gActiveDiv);
    if (div.childNodes.length > 0)
      div.removeChild(div.childNodes[0]);
    div.appendChild(tbl);
    for (var i = 0; i < gCanvas.length; i++)
      SetImgSrc(gCanvas[i], gQuality);
  }
}
var maxRow = 9;
var maxCol = 9;
function bestFit(total)
{
  var grid = new Point(0, 0);
  if (total > maxRow * maxCol)
    grid = new Point(maxCol, maxRow);
  else
  {
    var max = 0;
    var w = winWidth;
    var h = winHeight - gToolbarHeight;
    for (var i = 0; i < total; i++)
    {
      var r = i + 1;
      var c = parseInt((total - 1)/ r) + 1;
      var w2 = parseInt((w - c - 1) / c);
      var h2 = parseInt((h - r - 1) / r);
      var min = (w2 > h2) ? h2 : w2;
      if (min > max)
      {
        max = min;
        grid.y = r;
        grid.x = c;
      }
    }
    if (grid.y > maxRow) grid.y = maxRow;
    if (grid.x > maxCol) grid.x = maxCol;
  }
  return grid;
}
function updateGridDisplay(row, col)
{
  var s = "";
  if (gIconLabel)
    s = "Layout<br/>";
  s += "<span style='font-size:12px'>" + row + "x" + col + "</span>";
  $("grid").innerHTML = s;
}
function setGridSize(row, col)
{
  var changed = false;
  var total = (isOptionHighlighted("serpersqr")) ? gShownSeries.length : gShownList.length;
  if (total > 0)
  {
    if (row < 1 || col < 1)
    {
      var g = bestFit(total);
      row = g.y;
      col = g.x;
    }
    Popup.closeAll();
    if (row != gGrid.y || col != gGrid.x)
    {
      bIsOneUp = false;
      updateGridDisplay(row,col);
      gGrid.y = row;
      gGrid.x = col;
      resetCanvas();
      refreshImages();
      // for IE bug
      if (isVisible("gridTbl"))
        $("gridTbl").focus();
      changed = true;
    }
  }
  return changed;
}


function sizeGrid(cell)
{
  var size = cell.id.substring(1).split("_");
  var row = parseInt(size[0]);
  var col = parseInt(size[1]);
  for (var i = 0; i < maxRow; i++)
    for (var j = 0; j < maxCol; j++)
      $("g" + i + "_" + j).style.backgroundColor = (i <= row && j <= col) ? "yellow" : BACKGROUND_COLOR;
  $("dim").innerHTML = (row + 1) + "x" + (col + 1);
}
function clearGrid()
{
  for (var i = 0; i < maxRow; i++)
    for (var j = 0; j < maxCol; j++)
      $("g" + i + "_" + j).style.backgroundColor = BACKGROUND_COLOR;
  $("dim").innerHTML = "";
}
function changeGrid()
{
  var cellSize = 15;
  var s = "";
  s += "<table id='gridSizeTbl' style='border-collapse:collapse;width:100%;background-color:silver;' cellpadding=0><tr><td>";
  s += "<table style='border-collapse:collapse;width:100%;background-color:silver;'>";
  for (var i = 0; i < maxRow; i++)
  {
    s += "<tr>";
    for (var j = 0; j < maxCol; j++)
      s += "<td id='g" + i + "_" + j + "' style='border:1px solid gray;width:" + cellSize + "px;height:" + cellSize + "px' onmousedown='setGridSize(" + (i + 1) + "," + (j + 1) + ")' onmouseover='sizeGrid(this)'>&nbsp;</td>";
    s += "</tr>";
  }
  s += "</table>";
  s += "<table style='border-collapse:collapse;width:100%;background-color:silver;'><tr style='height:16px'>";
  s += "<td id='dim' style='border:1px solid gray;width:50%;text-align:center'></td>";
  s += "<td style='border:1px solid gray;width:50%;text-align:center' onclick='setGridSize(0,0)' onmouseover='clearGrid();this.style.backgroundColor=\"yellow\"' onmouseout='this.style.backgroundColor=\"silver\"'>Fit All</td>";
  s += "</tr></table>";
  s += "</td></tr></table>";
  var gridTbl = $("gridTbl");
  var coord = getPageCoords(gridTbl);
  var p = new Popup(coord.x, coord.y + gridTbl.offsetHeight, (cellSize + 2) * maxCol + 9, (cellSize + 2) * maxRow + 38);
  p.div.innerHTML = s;
  var tbl = $("gridSizeTbl");
  p.div.style.height = tbl.offsetHeight + "px";
}

function setOneUp(canvas)
{
  if (bIsOneUp)
    setGridSize(saveGridSize.y, saveGridSize.x);
  else if (gGrid.x > 1 || gGrid.y > 1)
  {
    updateGridDisplay(1, 1);
    saveGridSize.copyPt(gGrid);
    gGrid = new Point(1, 1);

    detachCanvas();
    var tbl = createTable(1, 1, 1);
    var td = getCell(tbl, 0, 0);
    var w = winWidth - 4;
    var h = winHeight - gToolbarHeight - 3;
    canvas.style.width = w + "px";
    canvas.style.height = h + "px";
    td.appendChild(canvas);
    var div = $(gActiveDiv);
    if (div.childNodes.length > 0)
      div.removeChild(div.childNodes[0]);
    div.appendChild(tbl);
    SetImgSrc(canvas, gQuality);
    bIsOneUp = true;
  }
}
function onWindowResize()
{
  var divMntg = $("imgMontage");
  var divImgs = $("imgCanvas");
  var w = (document.documentElement.clientWidth) ? document.documentElement.clientWidth :
          (typeof(window.innerWidth) != "undefined") ? window.innerWidth : document.body.clientWidth;
  var h = (document.documentElement.clientHeight) ? document.documentElement.clientHeight :
          (typeof(window.innerHeight) != "undefined") ? window.innerHeight : document.body.clientHeight;
  if (isWM)
  {
    w = screen.availWidth;
    h = screen.availHeight;
  }
  var h2 = h - gToolbarHeight + "px";
  if (h2 != "NaNpx")
  {
    divMntg.style.height = h2;
    divImgs.style.height = h2;
  }
  if (winWidth != w || winHeight != h)
  {
    winWidth = w;
    winHeight = h;
    if (gCanvas.length > 0)
      refreshImages();
  }
}
function initScrollbarWidth()
{
  var scr = document.createElement('div');
  var inn = document.createElement('div');

  scr.style.position = 'absolute';
  scr.style.top = '-1000px';
  scr.style.left = '-1000px';
  scr.style.width = '100px';
  scr.style.height = '50px';
  scr.style.overflow = 'scroll';

  inn.style.width = '100%';
  inn.style.height = '200px';

  scr.appendChild(inn);
  document.body.appendChild(scr);
  gScrollbarWidth = (100 - inn.offsetWidth);
  document.body.removeChild(document.body.lastChild);
}

function initSelections()
{
  if (gReady)
  {
    toggleOption($("anno"));
    chooseSquareMode($("serpersqr"));
    chooseTool($("tpan"));
    setGridSize(0,0);
    if (gMontagePresent)
    {
      toggleMontage();
      var s = "";
      s += "<table style='border-collapse:collapse;width:100%;'><tr style='height:100px'>";
      s += "<td style='text-align:center;vertical-align:middle' onclick='Popup.closeAll();'>";
      s += "You are viewing the Montage (key selected images) for this exam.  Click the <b>'m'</b> button to toggle on or off the Montage display in order to view other images."
      s += "</td></tr></table>";
      var p = new Popup(0, gIconHeight + 8, 200, 100);
      p.div.innerHTML = s;
    }
  }
  else
    setTimeout("initSelections()", 100);
}
function initImageVirtual(n, ext, attr)
{
  if (typeof gImgProps[n] == 'undefined')
    initImageProp(n);
  if (typeof gImgProps[n].vir == 'undefined')
    gImgProps[n].vir = new Object();
  gImgProps[n].vir.ext = ext;
  gImgProps[n].vir.attr = attr;
  var ar = attr.split(" ");
  for (var i = 0; i < ar.length; i++)
  {
    if (ar[i].substring(0, 2).toUpperCase() == "W=")
      gImgProps[n].vir.w = parseInt(ar[i].substring(2));
    else if (ar[i].substring(0, 2).toUpperCase() == "L=")
      gImgProps[n].vir.l = parseInt(ar[i].substring(2));
    else if (ar[i].substring(0, 2).toUpperCase() == "C=")
    {
      gImgProps[n].vir.crop = new Object();
      gImgProps[n].vir.crop.top = parseInt(ar[i++].substring(2));
      gImgProps[n].vir.crop.left = parseInt(ar[i++]);
      gImgProps[n].vir.crop.bottom = parseInt(ar[i++]);
      gImgProps[n].vir.crop.right = parseInt(ar[i]);
    }
  }
}

function initImageProp(n)
{
  if (typeof gImgProps[n] == 'undefined')
    gImgProps[n] = new Object();
  gImgProps[n].origWL = {w:gWLUnassigned, l:gWLUnassigned, slope:1};
  gImgProps[n].wl = new WL();
  gImgProps[n].preset = null;
  gImgProps[n].origSize = new Point(0, 0);
  gImgProps[n].magDelta = 0;
  gImgProps[n].roamPt = new Point(-1, -1);
  gImgProps[n].meas = "";
  gImgProps[n].resetRoam = function()
  {
    this.roamPt.x = parseInt(this.origSize.x / 2);
    this.roamPt.y = parseInt(this.origSize.y / 2);
    if (typeof this.vir != 'undefined' && typeof this.vir.crop != 'undefined')
    {
      var c = this.vir.crop;
      this.roamPt.x = parseInt((c.right - c.left) / 2) + c.left;
      this.roamPt.y = parseInt((c.bottom - c.top) / 2) + c.top;
    }
  }
  gImgProps[n].resetMag = function()
  {
    this.resetRoam();
    this.magDelta = 0;
  }
  gImgProps[n].getMagFactor = function()
  {
    return ((this.magDelta > 0) ? (this.magDelta / 100.0) + 1.0 : 1.0);
  }
  gImgProps[n].getOrigSize = function()
  {
    var orig = new Point(0, 0);
    orig.copyPt(this.origSize);
    if (typeof this.vir != 'undefined' && typeof this.vir.crop != 'undefined')
    {
      orig.x = this.vir.crop.right - this.vir.crop.left;
      orig.y = this.vir.crop.bottom - this.vir.crop.top;
    }
    return orig;
  }
  gImgProps[n].getScale = function(canvas)
  {
    var orig = this.getOrigSize();
    var scale = Math.min(canvas.offsetWidth / orig.x, canvas.offsetHeight / orig.y);
    if (scale < 1.0 && !gShrink)
      scale = 1.0;
    else if (scale > 1.0 && !gExpand)
      scale = 1.0;
    return scale;
  }
  gImgProps[n].getTotalMag = function(canvas)
  {
    return this.getMagFactor() * this.getScale(canvas);
  }
  gImgProps[n].getOrigWL = function()
  {
    var wl = new WL(this.origWL.w, this.origWL.l);
    if (typeof this.vir != 'undefined')
      if (typeof this.vir.w != 'undefined' && typeof this.vir.l != 'undefined')
        wl = new WL(this.vir.w, this.vir.l);
    return wl;
  }
  gImgProps[n].addWL = function(dx, dy)
  {
    if (!this.wl.isValid()) this.resetWL();
    if (this.wl.isValid())  this.wl = deltaToWL(new Point(dx, dy), this.wl, this.origWL.slope);
  }
  gImgProps[n].setWL = function(wl)  { this.wl.copy(wl); }
  gImgProps[n].getWL = function()    { return this.wl;  }
  gImgProps[n].resetWL = function()  { this.preset=null; this.wl.copy(this.getOrigWL()); }
  gImgProps[n].info = false;
}
function initImages()
{
  if (gReady)
  {
    var divImg = $("imgCanvas");
    divImg.style.display = "";
    gActiveDiv = "imgCanvas";
    if (gMontagePresent)
    {
      var divMntg = $("imgMontage");
      gMontage = document.createElement("div");
      gMontage.id = montageId;
      initCanvasImg(gMontage, -1, false);
      gMontage.style.height = "100%";
      gMontage.shownIndex = MONTAGE_EXT;
      divMntg.appendChild(gMontage);
    }
    if (!isWM)
      initScrollbarWidth();

    initSelections();
  }
  else
    setTimeout("initImages()", 100);
}
function initStyle()
{
  if (!document.styleSheets) return;
  var theRules = new Array();
  if (document.styleSheets[0].cssRules)
    theRules = document.styleSheets[0].cssRules
  else if (document.styleSheets[0].rules)
    theRules = document.styleSheets[0].rules
  else return;
  for (var i = 0; i < theRules.length; i++)
  {
    if (theRules[i].selectorText == '.divider')
    {
      theRules[i].style.height = (gIconHeight + 2) + "px";
    }
    else if (theRules[i].selectorText == '.toolBtn')
    {
      theRules[i].style.width = (gIconWidth + 2) + "px";
      theRules[i].style.height = (gIconHeight + 2) + "px";
    }
    else if (theRules[i].selectorText == '.dropdownBtn')
    {
      theRules[i].style.height = (gIconHeight + 2) + "px";
    }
  }
}
function init()
{
  if (window.addEventListener)
    window.addEventListener('DOMMouseScroll', wheel, false);

  if (!isMobile) window.onmousewheel = wheel;
  if (!isMobile) window.onresize = onWindowResize;
  if (!isMobile) document.onmousewheel = wheel;
  if (!isPPC) document.onmousemove = onMouseMove;
  if (!isPPC) document.onmouseup = onMouseUp;
  if (!isPPC) document.onkeydown = onKeyDown;

  getSeriesCtrl();

  setVisible("montageTbl", gMontagePresent);
  var hasAddlItems = (gDocsPresent || gHasNotes || gSoundPresent || (gReportID.length > 0) );
  setVisible("reportTbl", hasAddlItems);
  if (hasAddlItems)
  {
    setVisible("audio", gSoundPresent);
    setVisible("report", gReportID.length > 0);
  }
  setVisible("doc", gDocsPresent);
  setVisible("notes", gHasNotes);

  toggleBtnsLabel();

  setTimeout("initImages()", 100);
}

// This comment hides JavaScript from non-javascript browsers -->
</script>
<style type="text/css">
body
{
  font-family:arial,sans-serif;
  font-size:11px;
  overflow:hidden;
}
input,textarea,select
{
  font-family:arial,sans-serif;
  font-size:11px;
}
table
{
  border-collapse:collapse;
  font-family:arial,sans-serif;
  font-size:11px;
}
.divider
{
  width:2px;
  height:24px;
  font-size:6px;
  background-color:#606060;
}
.toolBtn
{
  width:24px;
  height:24px;
  font-family:arial,sans-serif;
  font-size:10px;
  text-align:center;
}
.dropdownBtn
{
  width:9px;
  height:24px;
  vertical-align:bottom;
}


</style></head>
<body style="color:black;background-color:silver;margin:0px;" onload="init()" >
  <table style="border-collapse:collapse; border:2px solid #606060;width:100%;" cellpadding="0" cellspacing="0">
    <tr>
      <td>
        <table id="toolbar" style="border-collapse:collapse;" cellpadding="1" cellspacing="0">
          <tr>
            <td id="montageTbl">
              <table style="border-collapse:collapse;" cellpadding="0" cellspacing="0">
                <tr>
                  <td id="montage" class="toolBtn" onclick="toggleOption(this);ShowMontage();" title="Show/Hide Montage" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img src="..\..\Images\montage.gif" alt="Show/Hide Montage" /></td>
                  <td class="divider">&nbsp;</td>
                </tr>
              </table>
            </td>
            <td id="sqrModeTbl">
              <table style="border-collapse:collapse;" cellpadding="0" cellspacing="0">
                <tr>
                  <td id="imgpersqr" class="toolBtn" onclick="chooseSquareMode(this)" title="Image Per Square: Page Up/Down for more Images" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img src="..\..\Images\imgpersqr.gif" alt="Image Per Square: Page Up/Down for more Images" /></td>
                  <td id="serpersqr" class="toolBtn" onclick="chooseSquareMode(this)" title="Series Per Square: Page Up/Down for more Series" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)" value="serpersqr"><img id="isqrmode" src="..\..\Images\serpersqr.gif" alt="Series Per Square: Page Up/Down for more Series" /></td>
                </tr>
              </table>
            </td>
            <td id="gridTbl">
              <table style="border-collapse:collapse;" cellpadding="0" cellspacing="0">
                <tr>
                  <td id="grid" class="toolBtn" onclick="changeGrid()" ondblclick="setGridSize(0,0)" title="Select Display Matrix" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"></td>
                  <td class="divider">&nbsp;</td>
                </tr>
              </table>
            </td>
            <td>
              <table id="tools" style="border-collapse:collapse;" cellpadding="0" cellspacing="0">
                <tr>
                  <td id="tpan" class="toolBtn" onclick="chooseTool(this)" title="Page Tool: Left click & drag, or mouse wheel." onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img id="ipan" src="..\..\Images\tpan.gif" alt="Page Tool" /></td>
                  <!--
                  <td id="twl" class="toolBtn" onclick="chooseTool(this)" title="Window Level Tool" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)" value="twla"><img id="itwl" src="..\..\Images\twla.gif" alt="Window Level Tool" /></td>
                  <td class="dropdownBtn" onclick="selectTool('twl')" title="Select Window Level Tool" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img src="..\..\Images\dropdown.gif" alt="Select Window Level Tool" /></td>
                  -->
                  <td id="tmag" class="toolBtn" onclick="chooseTool(this)" title="Magnifying Tool" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)" value="tmag"><img id="itmag" src="..\..\Images\tmag.gif" alt="Magnifying Tool"/></td>
                  <td class="dropdownBtn" onclick="selectTool('tmag')" title="Select Magnifying Tool" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img src="..\..\Images\dropdown.gif" alt="Select Magnifying Tool" /></td>
                  <td id="troam" class="toolBtn" onclick="chooseTool(this)" title="Roaming Tool" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img id="iroam" src="..\..\Images\troam.gif" alt="Roaming Tool" /></td>
                  <!--
                  <td id="tmeas" class="toolBtn" onclick="chooseTool(this)" title="Measuring Tool" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img id="imeas" src="..\..\Images\tmeas.gif" alt="Measuring Tool" /></td>
                  -->
                  <td class="divider">&nbsp;</td>
                </tr>
              </table>
            </td>
                  <!--
            <td>
              <table style="border-collapse:collapse;" cellpadding="0" cellspacing="0">
                <tr>
                  <td id="anno" class="toolBtn" onclick="toggleOption(this);refreshImages();" title="Annotation On/Off Tool" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img src="..\..\Images\tanno.gif" alt="Annotation On/Off Tool" /></td>
                  <td class="divider">&nbsp;</td>
                </tr>
              </table>
            </td>
                  -->
            <td id="reportTbl">
              <table style="border-collapse:collapse;" cellpadding="0" cellspacing="0">
                <tr>
                  <td id="audio"  class="toolBtn" onclick="playWav()" title="Play Audio Report" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img src="..\..\Images\audio.gif" alt="Play Audio Report" /></td>
                  <td id="report" class="toolBtn" onclick="viewReport()" title="View Exam Report" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img src="..\..\Images\report.gif" alt="View Exam Report" /></td>
                  <td id="notes"  class="toolBtn" onclick="viewNotes()" title="View Exam Notes" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img src="..\..\Images\notes.gif" alt="View Exam Notes" /></td>
                  <td id="doc" class="toolBtn" onclick="viewDoc(this);" title="Show/Hide Document Images" onmouseover="onBtnMouseOver(this)" onmouseout="onBtnMouseOut(this)"><img src="..\..\Images\doc.gif" alt="Show/Hide Document Images" /></td>
                  <td class="divider">&nbsp;</td>
                </tr>
              </table>
            </td>
            <td id="seriesTbl" style='font-size:11px;white-space:nowrap'>
              Series<select id='SeriesList' name='SeriesList' style='font-size:11px' onchange='ChangeSeries(this)' ></select>
              Image<input type='button' id='butPrior' style='font-size:11px' value='&lt;' accesskey='p' title='Show prior image   (ALT + P)' onclick='nextExamImage(-1)' /><input type='text' id='ImgNumber' value='' style='width:32px;font-size:11px' readonly='readonly' maxlength='0' title='Image Number' /><input type='button' id='butNext' style='font-size:11px' value='&gt;' accesskey='n' title='Show next image   (ALT + N)' onclick='nextExamImage(1)' />
            </td>
            <td>
              <input type='button' name='butREL' style='font-size:11px' value='Exam List' title='Return to the exam list' onclick='history.back()' />
            </td>
            <td id='warning' style='font-size:9px;display:none;'>
              &nbsp;&nbsp;Not for diagnostic purposes.<br>&nbsp;&nbsp;Double clicking toggles 1:1 display.
            </td>
          </tr>
        </table>
      </td>
    </tr>
    <tr>
  </table>
  <div id="imgCanvas"  style="width:100%;background-color:#000000;display:none;overflow:hidden;"></div>
  <div id="imgMontage" style="width:100%;background-color:#000000;display:none;overflow:hidden;"></div>
  <div id="divSelect"  style="position:absolute;left:0px;top:0px;width:1px;height:1px;border:1px solid red;opacity:0.5;filter:alpha(opacity=50);background-color:#ffffff;display:none;overflow:hidden"></div>
</body>
</html>

